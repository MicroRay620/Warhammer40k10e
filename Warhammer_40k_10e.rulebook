{
  "name": "40k10e",
  "revision": "10.9.20",
  "game": "Warhammer 40k",
  "genre": "sci-fi",
  "publisher": "Games Workshop",
  "url": "https://warhammer40000.com/",
  "notes": "This rulebook is provided for the purposes of testing Rosterizer and is not intended for distribution.",
  "wip": false,
  "isModule": true,
  "dependencies": [],
  "rulebook": {
    "assetTaxonomy": {
      "Ability": {
        "aspects": {
          "Visibility": "active"
        },
        "rules": {
          "Error in this Ability’s text": {
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "text"
                  ]
                ],
                "value": "ERROR"
              }
            ],
            "evaluate": "AND",
            "failState": "error"
          },
          "putXInName": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "prepend": " ",
                "value": [
                  "{self}",
                  "stats",
                  "x",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "x",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 100
          },
          "renameAbility": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "abilityName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "abilityName",
                    "value"
                  ]
                ],
                "value": ""
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 200
          }
        },
        "stats": {
          "abilityName": {
            "statType": "term",
            "value": null,
            "visibility": "hidden"
          },
          "x": {
            "statType": "term",
            "value": null,
            "visibility": "hidden"
          }
        }
      },
      "Battle Honour": {
        "stats": {
          "Crusade Pts": {
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "hidden"
          }
        }
      },
      "Battle Scar": {
        "aspects": {
          "Rename": true
        }
      },
      "Battle Trait": {
        "aspects": {
          "Lock Qty": true,
          "Rename": true,
          "Unique": true
        },
        "keywords": {
          "Tags": [],
          "Keywords": []
        },
        "templateClass": "Battle Honour",
        "text": ""
      },
      "Campaign": {
        "allowed": {
          "classifications": []
        },
        "aspects": {
          "Describe": true,
          "Rename": true
        },
        "assets": {
          "traits": [
            "Campaign Phase§Phase 1",
            "Campaign Phase§Phase 2",
            "Campaign Phase§Phase 3"
          ]
        },
        "rules": {
          "Select your Alliance": {
            "evals": [
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Alliance",
                    "value"
                  ]
                ],
                "value": "-"
              }
            ],
            "evaluate": "AND",
            "failState": "warning"
          }
        },
        "stats": {
          "Alliance": {
            "dynamic": true,
            "ranks": {
              "-": {
                "order": 0
              },
              "Defenders": {
                "order": 1
              },
              "Invaders": {
                "order": 2
              },
              "Raiders": {
                "order": 3
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Battle Tally": {
            "dynamic": true,
            "increment": {
              "value": 1
            },
            "statType": "numeric",
            "value": 0,
            "visibility": "normal"
          },
          "Battles Won": {
            "dynamic": true,
            "increment": {
              "value": 1
            },
            "statType": "numeric",
            "value": 0,
            "visibility": "normal"
          }
        }
      },
      "Campaign Phase": {
        "allowed": {
          "classifications": [
            "Mission Record"
          ]
        },
        "aspects": {
          "Describe": true,
          "Rename": true,
          "Visibility": "active"
        },
        "stats": {
          "Campaign Points": {
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "normal"
          }
        }
      },
      "Character": {
        "allowed": {
          "classifications": [
            "Enhancement"
          ]
        },
        "constraints": {
          "any": [
            "Core"
          ]
        },
        "removed": {
          "rules": {
            "allowVehicleScarsTraits": {}
          }
        },
        "rules": {
          "allowAntiquityRelics": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": "Antiquity Relic"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              },
              {
                "actionable": true,
                "min": 30,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Experience",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "allowCrusadeRelics": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "allowed",
                    "classifications"
                  ]
                ],
                "value": "Crusade Relic"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": "Artificer Relic"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "allowLegendaryRelics": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": "Legendary Relic"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              },
              {
                "actionable": true,
                "min": 50,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Experience",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "detachmentEnhancements": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": [
                  "{roster}",
                  "stats",
                  "Detachment",
                  "value"
                ]
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          },
          "disallowReqsForEpicHeroes": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "disallowed",
                    "classifications"
                  ]
                ],
                "value": "Battle Trait"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "disallowed",
                    "classifications"
                  ]
                ],
                "value": "Battle Scar"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "disallowed",
                    "classifications"
                  ]
                ],
                "value": "Crusade Relic"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "disallowed",
                    "classifications"
                  ]
                ],
                "value": "Requisition"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Epic Hero"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "hideWarlordOption": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Warlord",
                    "value"
                  ]
                ],
                "value": "-"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Warlord",
                    "visibility"
                  ]
                ],
                "value": "hidden"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "tracked",
                    "Warlord"
                  ]
                ]
              },
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Warlord",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 25
          },
          "noAllyEnhancements": {
            "actions": [
              {
                "actionType": "remove",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "allowed",
                    "classifications"
                  ]
                ],
                "value": "Enhancement"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "keywords",
                    "Faction"
                  ]
                ],
                "value": [
                  "{roster}",
                  "stats",
                  "Faction",
                  "value"
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "noEpicHeroEnhancements": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "disallowed",
                    "classifications"
                  ]
                ],
                "value": "Enhancement"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Epic Hero"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "Only one Warlord is allowed.": {
            "evals": [
              {
                "actionable": true,
                "max": 1,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "tracked",
                    "Warlord"
                  ]
                ]
              },
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tracked",
                    "Warlord"
                  ]
                ],
                "value": 0
              }
            ],
            "evaluate": "OR",
            "failState": "error"
          },
          "renameToWarlord": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "prepend": "WL ",
                "value": [
                  "{this}",
                  "evals",
                  "0",
                  "result",
                  "string"
                ]
              },
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "{0string}"
                  ]
                ],
                "value": 1
              }
            ],
            "evals": [
              {
                "actionable": false,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ]
              },
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Warlord",
                    "value"
                  ]
                ],
                "value": "✓"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "Your army contains more than one of this unique epic hero": {
            "evals": [
              {
                "actionable": false,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ]
              },
              {
                "actionable": false,
                "max": 1,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "tally",
                    "{0string}"
                  ]
                ]
              },
              {
                "actionable": true,
                "max": 1,
                "not": false,
                "operator": "SUM",
                "paths": [
                  [
                    "{self}",
                    "aspects",
                    "Unique"
                  ],
                  [
                    "{this}",
                    "evals",
                    "1",
                    "result",
                    "truthy"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "error"
          }
        },
        "stats": {
          "Enhancement": {
            "max": 1,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "Warlord": {
            "dynamic": true,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "number": 1,
                "order": 1,
                "tracking": {}
              }
            },
            "statType": "rank",
            "tracked": true,
            "value": "-",
            "visibility": "normal"
          }
        },
        "templateClass": "Unit"
      },
      "Crusade Relic": {
        "aspects": {
          "Unique": true
        },
        "keywords": {
          "Tags": []
        },
        "templateClass": "Battle Honour"
      },
      "Detachment": {
        "aspects": {
          "Visibility": "active"
        }
      },
      "Enhancement": {
        "aspects": {
          "Lock Qty": true,
          "Unique": true
        },
        "keywords": {
          "Keywords": [],
          "Tags": [
            "anyEnhancement"
          ]
        },
        "rules": {
          "There are more than 1 of this unique enhancement.": {
            "evals": [
              {
                "actionable": false,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ]
              },
              {
                "actionable": false,
                "max": 1,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "tally",
                    "{0string}"
                  ]
                ]
              },
              {
                "actionable": true,
                "max": 1,
                "not": false,
                "operator": "SUM",
                "paths": [
                  [
                    "{self}",
                    "aspects",
                    "Unique"
                  ],
                  [
                    "{this}",
                    "evals",
                    "1",
                    "result",
                    "truthy"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "error"
          }
        },
        "stats": {
          "Points": {
            "group": "Cost",
            "groupOrder": -1,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "normal"
          }
        }
      },
      "Infantry/Mounted": {
        "templateClass": "Unit"
      },
      "Melee Weapon": {
        "removed": {
          "stats": {
            "BS": {}
          }
        },
        "stats": {
          "Range": {
            "format": "{v}",
            "statType": "term",
            "value": "Melee"
          }
        },
        "templateClass": "Weapon"
      },
      "Mission Record": {
        "aspects": {
          "Describe": true,
          "Lock Qty": true,
          "Rename": true,
          "Visibility": "active"
        },
        "rules": {
          "nonLoss": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "tracked",
                    "Campaign Points"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "Battle Size",
                  "processed",
                  "numeric",
                  "current"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Result",
                    "value"
                  ]
                ],
                "value": "-"
              },
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Result",
                    "value"
                  ]
                ],
                "value": "Loss"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "stats": {
          "Agenda 1": {
            "dynamic": true,
            "label": "Agenda",
            "ranks": {
              "-": {
                "order": 0
              },
              "Battlefield Survivors": {
                "order": 1
              },
              "Swarm the Planet": {
                "order": 2
              },
              "Headhunters": {
                "order": 3
              },
              "Monstrous Targets": {
                "order": 4
              },
              "Eradicate the Swarm": {
                "order": 5
              },
              "Critical Objectives": {
                "order": 6
              },
              "Drive Home the Blade": {
                "order": 7
              },
              "Cleanse Infestation": {
                "order": 8
              },
              "Forward Observers": {
                "order": 9
              },
              "Recover Mission Archives": {
                "order": 10
              },
              "Malefic Hunter": {
                "order": 11
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Agenda 2": {
            "dynamic": true,
            "label": "Agenda",
            "ranks": {
              "-": {
                "order": 0
              },
              "Battlefield Survivors": {
                "order": 1
              },
              "Swarm the Planet": {
                "order": 2
              },
              "Headhunters": {
                "order": 3
              },
              "Monstrous Targets": {
                "order": 4
              },
              "Eradicate the Swarm": {
                "order": 5
              },
              "Critical Objectives": {
                "order": 6
              },
              "Drive Home the Blade": {
                "order": 7
              },
              "Cleanse Infestation": {
                "order": 8
              },
              "Forward Observers": {
                "order": 9
              },
              "Recover Mission Archives": {
                "order": 10
              },
              "Malefic Hunter": {
                "order": 11
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Battle Size": {
            "dynamic": true,
            "increment": {},
            "ranks": {
              "-": {
                "format": "-",
                "order": 0
              },
              "Incursion": {
                "format": "Incursion",
                "order": 1,
                "tracking": {}
              },
              "Strike Force": {
                "format": "Strike Force",
                "number": 1,
                "order": 2,
                "tracking": {}
              },
              "Onslaught": {
                "format": "Onslaught",
                "number": 2,
                "order": 3,
                "tracking": {}
              }
            },
            "statOrder": 0,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Opponent": {
            "dynamic": true,
            "statOrder": -1,
            "statType": "term",
            "value": "",
            "visibility": "normal"
          },
          "Result": {
            "dynamic": true,
            "ranks": {
              "-": {
                "order": 0
              },
              "Loss": {
                "order": 1,
                "tracking": {
                  "Campaign Points": 1
                }
              },
              "Draw": {
                "order": 2,
                "tracking": {
                  "Campaign Points": 2
                }
              },
              "Win": {
                "order": 3,
                "tracking": {
                  "Campaign Points": 3
                }
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          }
        }
      },
      "Mission Reward": {},
      "Model": {
        "aspects": {
          "Group Traits": true,
          "Type": "game piece",
          "Visibility": "active"
        },
        "rules": {
          "renameModel": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "modelName",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "modelName",
                    "value"
                  ]
                ],
                "value": ""
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 200
          }
        },
        "stats": {
          "Base": {
            "statType": "term",
            "value": null,
            "visibility": "active"
          },
          "Ld": {
            "format": "{v}+",
            "group": "Stats",
            "statOrder": 8,
            "statType": "numeric",
            "value": null,
            "visibility": "normal"
          },
          "M": {
            "format": "{v}″",
            "group": "Stats",
            "statOrder": 1,
            "statType": "numeric",
            "value": null,
            "visibility": "normal"
          },
          "modelName": {
            "statType": "term",
            "value": null,
            "visibility": "hidden"
          },
          "OC": {
            "group": "Stats",
            "statOrder": 9,
            "statType": "numeric",
            "value": null,
            "visibility": "normal"
          },
          "Points": {
            "format": "{v}",
            "group": "Cost",
            "groupOrder": -1,
            "statType": "numeric",
            "tracked": true,
            "value": null
          },
          "Sv": {
            "format": "{v}+",
            "group": "Stats",
            "statOrder": 6,
            "statType": "numeric",
            "value": null,
            "visibility": "normal"
          },
          "T": {
            "group": "Stats",
            "statOrder": 5,
            "statType": "numeric",
            "value": null,
            "visibility": "normal"
          },
          "W": {
            "group": "Stats",
            "statOrder": 6,
            "statType": "numeric",
            "value": null,
            "visibility": "normal"
          }
        }
      },
      "Monster": {
        "templateClass": "Unit"
      },
      "Order of Battle": {
        "allowed": {
          "classifications": [
            "Unit",
            "Mission Reward"
          ],
          "items": [
            "Requisition§Increase Supply Limit",
            "Requisition§Rearm and Resupply"
          ]
        },
        "aspects": {
          "Group Includes": true
        },
        "constraints": {
          "any": [
            "forceReward",
            "unit"
          ]
        },
        "rules": {
          "hide enclosed assets": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "assets",
                    "templateClass",
                    "Unit",
                    "aspects",
                    "Visibility"
                  ]
                ],
                "value": "active"
              }
            ],
            "evals": [],
            "evaluate": "OR",
            "failState": "pass"
          },
          "noPoints": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "tracked",
                    "Points"
                  ],
                  [
                    "{self}",
                    "stats",
                    "Supply Used",
                    "value"
                  ]
                ],
                "value": [
                  "{this}",
                  "evals",
                  "0",
                  "result",
                  "integer"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "equation": {
                  "operator": "T*O",
                  "value": -1
                },
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tracked",
                    "Points"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "setSupplyUsed": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Supply Used",
                    "value"
                  ]
                ],
                "value": [
                  "{self}",
                  "tracked",
                  "Points"
                ]
              },
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Supply Used",
                    "value"
                  ]
                ],
                "value": [
                  "{roster}",
                  "stats",
                  "Points",
                  "value"
                ]
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 999
          },
          "supplyUsedLimit": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Supply Used",
                    "max"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "Supply Limit",
                  "value"
                ]
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "stats": {
          "Supply Limit": {
            "statType": "numeric",
            "tracked": true,
            "value": 1000,
            "visibility": "normal"
          },
          "Supply Used": {
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "normal"
          }
        }
      },
      "Ranged Weapon": {
        "removed": {
          "stats": {
            "WS": {}
          }
        },
        "templateClass": "Weapon"
      },
      "Requisition": {
        "aspects": {
          "Describe": true,
          "Lock Qty": true,
          "Visibility": "always"
        },
        "stats": {
          "RP": {
            "group": "Cost",
            "groupOrder": -1,
            "statType": "numeric",
            "tracked": true,
            "value": null,
            "visibility": "always"
          }
        }
      },
      "Stratagem": {
        "aspects": {
          "Group By": "Phase",
          "Lock Qty": true,
          "Unique": true,
          "Visibility": "active"
        },
        "keywords": {
          "Phase": [],
          "Category": [],
          "Turn": []
        },
        "stats": {
          "Command Cost": {
            "group": "Cost",
            "groupOrder": -1,
            "label": "CP",
            "statType": "numeric",
            "value": 0,
            "visibility": "always"
          }
        }
      },
      "Stratagems": {
        "aspects": {
          "Order Traits A–Z": true,
          "Visibility": "active"
        },
        "assets": {
          "traits": [
            "Stratagem§Heroic Intervention",
            "Stratagem§Smokescreen",
            "Stratagem§Go to Ground",
            "Stratagem§Fire Overwatch",
            "Stratagem§Rapid Ingress",
            "Stratagem§Tank Shock",
            "Stratagem§Grenade",
            "Stratagem§Insane Bravery",
            "Stratagem§Command Re-roll",
            "Stratagem§Counter-offensive",
            "Stratagem§Epic Challenge"
          ]
        }
      },
      "Tyrannic War Battle Honour": {
        "aspects": {
          "Lock Qty": true,
          "Unique": true
        },
        "templateClass": "Battle Honour"
      },
      "Unit": {
        "allowed": {
          "classifications": [],
          "items": []
        },
        "aspects": {
          "Group By": "Category",
          "Group Includes": true,
          "Group Traits": true,
          "Lock Qty": true,
          "Rename": true,
          "Type": "conceptual"
        },
        "constraints": {
          "any": []
        },
        "keywords": {
          "Category": [],
          "Source": [],
          "Faction": [],
          "Keywords": [],
          "Tags": [
            "unit"
          ]
        },
        "removed": {
          "stats": {}
        },
        "rules": {
          "allowCharacterTraits": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": "Character"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              },
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Character"
              },
              {
                "actionable": true,
                "contains": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Monster"
              },
              {
                "actionable": true,
                "contains": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Vehicle"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "allowInfantryTraits": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": "Infantry"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              },
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Infantry"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "allowLegendaryVeterans": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Requisition§Legendary Veterans"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "classification"
                  ]
                ],
                "value": "Character"
              },
              {
                "actionable": true,
                "min": 30,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Experience",
                    "value"
                  ]
                ]
              },
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "allowMissionRewards": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": "unitReward"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "allowed",
                    "classifications"
                  ]
                ],
                "value": "Mission Reward"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "allowMonsterTraits": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": "Striding Behemoth"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              },
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Monster"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "allowMountedTraits": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": "Mounted"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              },
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Mounted"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "allowRenownedHeroes": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Requisition§Renowned Heroes"
              }
            ],
            "evals": [
              {
                "actionable": false,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "classification"
                  ]
                ],
                "value": "Character"
              },
              {
                "actionable": false,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Rank",
                    "value"
                  ]
                ],
                "value": "Battle-ready"
              },
              {
                "actionable": false,
                "max": 0,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Enhancement"
                  ]
                ]
              },
              {
                "actionable": false,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Renowned Heroes"
                  ]
                ],
                "value": 1
              },
              {
                "actionable": true,
                "not": false,
                "operator": "OR",
                "paths": [
                  [
                    "{this}",
                    "evals",
                    [
                      "0",
                      "1"
                    ],
                    "result",
                    "truthy"
                  ]
                ],
                "value": true
              },
              {
                "actionable": true,
                "not": false,
                "operator": "OR",
                "paths": [
                  [
                    "{this}",
                    "evals",
                    [
                      "2",
                      "3"
                    ],
                    "result",
                    "truthy"
                  ]
                ],
                "value": true
              },
              {
                "actionable": true,
                "contains": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Epic Hero"
              },
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              },
              {
                "actionable": true,
                "max": 0,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Disgraced"
                  ]
                ]
              },
              {
                "actionable": true,
                "max": 0,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Mark of Shame"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "allowScarsTraits": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "allowed",
                    "classifications"
                  ]
                ],
                "value": "Battle Scar"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "allowed",
                    "classifications"
                  ]
                ],
                "value": "Battle Trait"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              },
              {
                "actionable": true,
                "min": 0,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Battle Honour",
                    "max"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "allowTyrannicWarVet": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Requisition§Tyrannic War Veteran"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              },
              {
                "actionable": true,
                "min": 6,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Experience",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "allowVanillaReqs": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Requisition§Rearm and Resupply"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Requisition§Repair and Recuperate"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Requisition§Fresh Recruits"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "allowVehicleTraits": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": "Vehicle"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              },
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Vehicle"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "allowWalkerTraits": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": "Striding Behemoth"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "none"
                  ]
                ],
                "value": "notWalker"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              },
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Walker"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "appliedModelTally": {
            "evals": [
              {
                "actionable": false,
                "equation": {
                  "operator": "T-O",
                  "value": [
                    "{self}",
                    "tally",
                    "noTally"
                  ]
                },
                "not": false,
                "note": "Count the total number of tallyable models for points threshold purposes",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Model"
                  ]
                ]
              },
              {
                "actionable": false,
                "equation": {
                  "operator": "T-O",
                  "value": [
                    "{self}",
                    "assets",
                    "classIdentity",
                    "Unit",
                    "tally",
                    "Model"
                  ]
                },
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{this}",
                    "evals",
                    "0",
                    "result",
                    "integer"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 40
          },
          "apply2ndModelCost": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Points",
                    "value"
                  ]
                ],
                "value": [
                  "{this}",
                  "evals",
                  "1",
                  "result",
                  "integer"
                ]
              }
            ],
            "evals": [
              {
                "actionable": false,
                "equation": {
                  "operator": "T+O",
                  "value": 1
                },
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "model1stTally",
                    "value"
                  ]
                ]
              },
              {
                "actionable": false,
                "equation": {
                  "operator": "T-O",
                  "value": [
                    "{self}",
                    "stats",
                    "Points",
                    "processed",
                    "numeric",
                    "default"
                  ]
                },
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "model2ndCost",
                    "value"
                  ]
                ]
              },
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "model2ndTally",
                    "value"
                  ]
                ]
              },
              {
                "actionable": true,
                "min": [
                  "{this}",
                  "evals",
                  "0",
                  "result",
                  "integer"
                ],
                "not": false,
                "note": "relies on finalModelTally, which must precede it in order",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "rules",
                    "finalModelTally",
                    "evals",
                    "1",
                    "result",
                    "integer"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 51
          },
          "apply3rdModelCost": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Points",
                    "value"
                  ]
                ],
                "value": [
                  "{this}",
                  "evals",
                  "1",
                  "result",
                  "integer"
                ]
              }
            ],
            "evals": [
              {
                "actionable": false,
                "equation": {
                  "operator": "T+O",
                  "value": 1
                },
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "model2ndTally",
                    "value"
                  ]
                ]
              },
              {
                "actionable": false,
                "equation": {
                  "operator": "T-O",
                  "value": [
                    "{self}",
                    "stats",
                    "model2ndCost",
                    "value"
                  ]
                },
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "model3rdCost",
                    "value"
                  ]
                ]
              },
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "model3rdTally",
                    "value"
                  ]
                ]
              },
              {
                "actionable": true,
                "min": [
                  "{this}",
                  "evals",
                  "0",
                  "result",
                  "integer"
                ],
                "not": false,
                "note": "relies on finalModelTally, which must precede it in order",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "rules",
                    "finalModelTally",
                    "evals",
                    "1",
                    "result",
                    "integer"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 51
          },
          "apply4thModelCost": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Points",
                    "value"
                  ]
                ],
                "value": [
                  "{this}",
                  "evals",
                  "1",
                  "result",
                  "integer"
                ]
              }
            ],
            "evals": [
              {
                "actionable": false,
                "equation": {
                  "operator": "T+O",
                  "value": 1
                },
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "model3rdTally",
                    "value"
                  ]
                ]
              },
              {
                "actionable": false,
                "equation": {
                  "operator": "T-O",
                  "value": [
                    "{self}",
                    "stats",
                    "model3rdCost",
                    "value"
                  ]
                },
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "model4thCost",
                    "value"
                  ]
                ]
              },
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "model4thTally",
                    "value"
                  ]
                ]
              },
              {
                "actionable": true,
                "min": [
                  "{this}",
                  "evals",
                  "0",
                  "result",
                  "integer"
                ],
                "not": false,
                "note": "relies on finalModelTally, which must precede it in order",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "rules",
                    "finalModelTally",
                    "evals",
                    "1",
                    "result",
                    "integer"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 51
          },
          "applyMissingModels": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "traits"
                  ]
                ],
                "prepend": "",
                "value": [
                  "{self}",
                  "stats",
                  "modelKey",
                  "value"
                ]
              },
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "traits",
                    "item",
                    "{1string}",
                    "quantity"
                  ]
                ],
                "value": [
                  "{this}",
                  "evals",
                  "0",
                  "result",
                  "integer"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "equation": {
                  "operator": "T-O",
                  "value": [
                    "{self}",
                    "rules",
                    "trueModelTally",
                    "evals",
                    "1",
                    "result",
                    "integer"
                  ]
                },
                "not": true,
                "note": "Number of models remaining to be added",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Models",
                    "value"
                  ]
                ],
                "value": 0
              },
              {
                "actionable": false,
                "not": false,
                "note": "Get the key for the next eval",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "modelKey",
                    "value"
                  ]
                ]
              },
              {
                "actionable": true,
                "not": false,
                "note": "If there are no traits with the modelKey, we can proceed",
                "operator": "SUM",
                "paths": [
                  [
                    "{self}",
                    "traits",
                    "item",
                    "{1string}",
                    "quantity"
                  ]
                ],
                "value": 0
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 32
          },
          "applyMoreModels": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "traits",
                    "item",
                    "{1string}",
                    "quantity"
                  ]
                ],
                "prepend": "",
                "value": [
                  "{this}",
                  "evals",
                  "0",
                  "result",
                  "integer"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "equation": {
                  "operator": "T-O",
                  "value": [
                    "{self}",
                    "rules",
                    "appliedModelTally",
                    "evals",
                    "1",
                    "result",
                    "integer"
                  ]
                },
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Models",
                    "value"
                  ]
                ],
                "value": 0
              },
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "modelKey",
                    "value"
                  ]
                ]
              },
              {
                "actionable": false,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "traits",
                    "item",
                    "{1string}",
                    "designation"
                  ]
                ]
              },
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "{2string}"
                  ]
                ],
                "value": 0
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 42
          },
          "cheatUnitNameTally": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "{0string}"
                  ]
                ],
                "value": 1
              }
            ],
            "evals": [
              {
                "actionable": false,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 4
          },
          "copyPointsIfAlly1": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Ally 1 Points",
                    "value"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "Points",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "keywords",
                    "Faction"
                  ]
                ],
                "value": [
                  "{roster}",
                  "stats",
                  "Allied faction 1",
                  "value"
                ]
              },
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "classIdentity"
                  ]
                ],
                "value": "Unit"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 52
          },
          "copyPointsIfAlly2": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Ally 2 Points",
                    "value"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "Points",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "keywords",
                    "Faction"
                  ]
                ],
                "value": [
                  "{roster}",
                  "stats",
                  "Allied faction 2",
                  "value"
                ]
              },
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "classIdentity"
                  ]
                ],
                "value": "Unit"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 52
          },
          "count1in10": {
            "evals": [
              {
                "actionable": false,
                "equation": {
                  "operator": "T/O",
                  "value": 10
                },
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Model"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "error",
            "order": 100
          },
          "count1in3": {
            "evals": [
              {
                "actionable": false,
                "equation": {
                  "operator": "T/O",
                  "value": 3
                },
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Model"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "error",
            "order": 100
          },
          "count1in4": {
            "evals": [
              {
                "actionable": false,
                "equation": {
                  "operator": "T/O",
                  "value": 4
                },
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Model"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "error",
            "order": 100
          },
          "count1in5": {
            "evals": [
              {
                "actionable": false,
                "equation": {
                  "operator": "T/O",
                  "value": 5
                },
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Model"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "error",
            "order": 100
          },
          "count2in10": {
            "evals": [
              {
                "actionable": false,
                "equation": {
                  "operator": "T/O",
                  "value": 10
                },
                "not": false,
                "note": "track 1/5 of the models",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Model"
                  ]
                ]
              },
              {
                "actionable": false,
                "equation": {
                  "operator": "T*O",
                  "value": 2
                },
                "not": false,
                "note": "track 2/5 of the models",
                "operator": "AND",
                "paths": [
                  [
                    "{this}",
                    "evals",
                    "0",
                    "result",
                    "integer"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "error",
            "order": 100
          },
          "count2in5": {
            "evals": [
              {
                "actionable": false,
                "equation": {
                  "operator": "T/O",
                  "value": 5
                },
                "not": false,
                "note": "track 1/5 of the models",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Model"
                  ]
                ]
              },
              {
                "actionable": false,
                "equation": {
                  "operator": "T*O",
                  "value": 2
                },
                "not": false,
                "note": "track 2/5 of the models",
                "operator": "AND",
                "paths": [
                  [
                    "{this}",
                    "evals",
                    "0",
                    "result",
                    "integer"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "error",
            "order": 100
          },
          "crusadeStats": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    [
                      "Crusade Pts",
                      "Experience",
                      "Battle Honour",
                      "Rank",
                      "Combat Tally",
                      "Kills"
                    ],
                    "visibility"
                  ]
                ],
                "value": "normal"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              },
              {
                "actionable": true,
                "contains": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Epic Hero"
              },
              {
                "actionable": true,
                "contains": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Swarm"
              },
              {
                "actionable": true,
                "contains": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Fortification"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "defineUnitID": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "unitID",
                    "value"
                  ]
                ],
                "value": [
                  "{self}",
                  "classification"
                ]
              },
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "unitID",
                    "value"
                  ]
                ],
                "prepend": " ",
                "value": [
                  "{self}",
                  "designation"
                ]
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 4
          },
          "Error in this Unit’s text.": {
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "text"
                  ]
                ],
                "value": "ERROR"
              }
            ],
            "evaluate": "AND",
            "failState": "error"
          },
          "finalModelTally": {
            "evals": [
              {
                "actionable": false,
                "equation": {
                  "operator": "T-O",
                  "value": [
                    "{self}",
                    "tally",
                    "noTally"
                  ]
                },
                "not": false,
                "note": "Count the total number of tallyable models for points threshold purposes",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Model"
                  ]
                ]
              },
              {
                "actionable": false,
                "equation": {
                  "operator": "T-O",
                  "value": [
                    "{self}",
                    "assets",
                    "classIdentity",
                    "Unit",
                    "tally",
                    "Model"
                  ]
                },
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{this}",
                    "evals",
                    "0",
                    "result",
                    "integer"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 50
          },
          "maxQty": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "maxQty",
                    "value"
                  ]
                ],
                "value": 3
              }
            ],
            "evals": [
              {
                "actionable": false,
                "contains": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Battleline"
              },
              {
                "actionable": false,
                "contains": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Dedicated Transport"
              },
              {
                "actionable": true,
                "not": false,
                "operator": "OR",
                "paths": [
                  [
                    "{this}",
                    "evals",
                    "0",
                    "result",
                    "truthy"
                  ],
                  [
                    "{this}",
                    "evals",
                    "1",
                    "result",
                    "truthy"
                  ]
                ],
                "value": true
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 5
          },
          "onlyCharactersCanTopRank": {
            "actions": [
              {
                "actionType": "remove",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Rank",
                    "ranks"
                  ]
                ],
                "value": "Heroic"
              },
              {
                "actionType": "remove",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Rank",
                    "ranks"
                  ]
                ],
                "value": "Legendary"
              },
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Experience",
                    "max"
                  ]
                ],
                "value": 30
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "classification"
                  ]
                ],
                "value": "Character"
              },
              {
                "actionable": true,
                "min": 1,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Legendary Veterans"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "rank1": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Rank",
                    "value"
                  ]
                ],
                "value": "Blooded"
              },
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Battle Honour",
                    "max"
                  ]
                ],
                "value": 1
              }
            ],
            "evals": [
              {
                "actionable": true,
                "max": 15,
                "min": 6,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Experience",
                    "value"
                  ]
                ]
              },
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 21
          },
          "rank2": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Rank",
                    "value"
                  ]
                ],
                "value": "Battle-hardened"
              },
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Battle Honour",
                    "max"
                  ]
                ],
                "value": 2
              }
            ],
            "evals": [
              {
                "actionable": true,
                "max": 30,
                "min": 16,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Experience",
                    "value"
                  ]
                ]
              },
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 21
          },
          "rank3": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Rank",
                    "value"
                  ]
                ],
                "value": "Heroic"
              },
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Battle Honour",
                    "max"
                  ]
                ],
                "value": 3
              }
            ],
            "evals": [
              {
                "actionable": true,
                "max": 50,
                "min": 31,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Experience",
                    "value"
                  ]
                ]
              },
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 21
          },
          "rank4": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Rank",
                    "value"
                  ]
                ],
                "value": "Legendary"
              },
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Battle Honour",
                    "max"
                  ]
                ],
                "value": 4
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 51,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Experience",
                    "value"
                  ]
                ]
              },
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 21
          },
          "This unit has fewer (or more) models than allowed by its point cost.": {
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "model1stTally",
                    "value"
                  ]
                ],
                "value": 0
              },
              {
                "actionable": true,
                "not": false,
                "note": "a defect causes the value path to vanish on save. edit this in code.",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "rules",
                    "finalModelTally",
                    "evals",
                    "1",
                    "result",
                    "integer"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "model1stTally",
                  "value"
                ]
              },
              {
                "actionable": true,
                "not": false,
                "note": "a defect causes the value path to vanish on save. edit this in code.",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "rules",
                    "finalModelTally",
                    "evals",
                    "1",
                    "result",
                    "integer"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "model2ndTally",
                  "value"
                ]
              },
              {
                "actionable": true,
                "not": false,
                "note": "a defect causes the value path to vanish on save. edit this in code.",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "rules",
                    "finalModelTally",
                    "evals",
                    "1",
                    "result",
                    "integer"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "model3rdTally",
                  "value"
                ]
              },
              {
                "actionable": true,
                "not": false,
                "note": "a defect causes the value path to vanish on save. edit this in code.",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "rules",
                    "finalModelTally",
                    "evals",
                    "1",
                    "result",
                    "integer"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "model4thTally",
                  "value"
                ]
              }
            ],
            "evaluate": "OR",
            "failState": "warning"
          },
          "This unit has unspent Battle Honours.": {
            "evals": [
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              },
              {
                "actionable": true,
                "min": [
                  "{self}",
                  "stats",
                  "Battle Honour",
                  "max"
                ],
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Battle Honour",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "OR",
            "failState": "warning",
            "order": 22
          },
          "titanicCrusadePts": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Crusade Pts",
                    "value"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "Crusade Pts",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Titanic"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "Too many of this unit type in the army.": {
            "evals": [
              {
                "actionable": false,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "unitID",
                    "value"
                  ]
                ]
              },
              {
                "actionable": true,
                "max": [
                  "{self}",
                  "stats",
                  "maxQty",
                  "value"
                ],
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "tally",
                    "{0string}"
                  ]
                ]
              }
            ],
            "evaluate": "OR",
            "failState": "error"
          },
          "trueModelTally": {
            "evals": [
              {
                "actionable": false,
                "equation": {
                  "operator": "T-O",
                  "value": [
                    "{self}",
                    "tally",
                    "noTally"
                  ]
                },
                "not": false,
                "note": "Count the total number of tallyable models for points threshold purposes",
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Model"
                  ]
                ]
              },
              {
                "actionable": false,
                "equation": {
                  "operator": "T-O",
                  "value": [
                    "{self}",
                    "assets",
                    "classIdentity",
                    "Unit",
                    "tally",
                    "Model"
                  ]
                },
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{this}",
                    "evals",
                    "0",
                    "result",
                    "integer"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 30
          },
          "Warning in this Unit’s text.": {
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "text"
                  ]
                ],
                "value": "WARNING"
              }
            ],
            "evaluate": "AND",
            "failState": "warning"
          }
        },
        "stats": {
          "Ally 1 Points": {
            "group": "Cost",
            "groupOrder": -1,
            "statOrder": 2,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "Ally 2 Points": {
            "group": "Cost",
            "groupOrder": -1,
            "statOrder": 3,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "Base": {
            "statType": "term",
            "value": null,
            "visibility": "active"
          },
          "Battle Honour": {
            "group": "Crusade",
            "groupOrder": 3,
            "label": "Battle Honours",
            "max": 0,
            "statOrder": 4,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "Combat Tally": {
            "dynamic": true,
            "group": "Crusade",
            "groupOrder": 3,
            "increment": {
              "value": 1
            },
            "statOrder": 4,
            "statType": "numeric",
            "value": 0,
            "visibility": "hidden"
          },
          "Crusade Pts": {
            "group": "Crusade",
            "groupOrder": 3,
            "statOrder": 3,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "Experience": {
            "dynamic": true,
            "group": "Crusade",
            "groupOrder": 3,
            "increment": {
              "value": 1
            },
            "statOrder": 1,
            "statType": "numeric",
            "value": 0,
            "visibility": "hidden"
          },
          "Kills": {
            "dynamic": true,
            "group": "Crusade",
            "groupOrder": 3,
            "increment": {
              "value": 1
            },
            "statOrder": 6,
            "statType": "numeric",
            "value": 0,
            "visibility": "hidden"
          },
          "Ld": {
            "format": "{v}+",
            "group": "Stats",
            "statOrder": 8,
            "statType": "numeric",
            "value": null,
            "visibility": "normal"
          },
          "Leader": {
            "max": 1,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "M": {
            "format": "{v}″",
            "group": "Stats",
            "statOrder": 1,
            "statType": "numeric",
            "value": null,
            "visibility": "normal"
          },
          "maxQty": {
            "statType": "numeric",
            "value": 3,
            "visibility": "hidden"
          },
          "model1stTally": {
            "statType": "numeric",
            "value": 0,
            "visibility": "hidden"
          },
          "model2ndCost": {
            "statType": "numeric",
            "value": null,
            "visibility": "hidden"
          },
          "model2ndTally": {
            "statType": "numeric",
            "value": null,
            "visibility": "hidden"
          },
          "model3rdCost": {
            "statType": "numeric",
            "value": null,
            "visibility": "hidden"
          },
          "model3rdTally": {
            "statType": "numeric",
            "value": null,
            "visibility": "hidden"
          },
          "model4thCost": {
            "statType": "numeric",
            "value": null,
            "visibility": "hidden"
          },
          "model4thTally": {
            "statType": "numeric",
            "value": null,
            "visibility": "hidden"
          },
          "modelKey": {
            "statType": "term",
            "value": null,
            "visibility": "hidden"
          },
          "Models": {
            "dynamic": true,
            "group": "Loadout",
            "groupOrder": 2,
            "increment": {
              "value": 1
            },
            "min": 1,
            "statOrder": -1,
            "statType": "numeric",
            "value": null,
            "visibility": "hidden"
          },
          "OC": {
            "group": "Stats",
            "statOrder": 9,
            "statType": "numeric",
            "value": null,
            "visibility": "normal"
          },
          "Points": {
            "format": "{v}",
            "group": "Cost",
            "groupOrder": -1,
            "statOrder": 1,
            "statType": "numeric",
            "tracked": true,
            "value": null,
            "visibility": "always"
          },
          "Rank": {
            "group": "Crusade",
            "groupOrder": 3,
            "ranks": {
              "Battle-ready": {
                "order": 0
              },
              "Blooded": {
                "order": 1,
                "tracking": {}
              },
              "Battle-hardened": {
                "order": 2,
                "tracking": {}
              },
              "Heroic": {
                "order": 3,
                "tracking": {}
              },
              "Legendary": {
                "order": 4,
                "tracking": {}
              }
            },
            "statOrder": 3,
            "statType": "rank",
            "value": "Battle-ready",
            "visibility": "hidden"
          },
          "Sv": {
            "format": "{v}+",
            "group": "Stats",
            "statOrder": 6,
            "statType": "numeric",
            "value": null,
            "visibility": "normal"
          },
          "T": {
            "group": "Stats",
            "statOrder": 5,
            "statType": "numeric",
            "value": null,
            "visibility": "normal"
          },
          "unitID": {
            "statType": "term",
            "value": null,
            "visibility": "hidden"
          },
          "Vet Tally": {
            "dynamic": true,
            "group": "Crusade",
            "groupOrder": 3,
            "increment": {
              "value": 1
            },
            "statOrder": 10,
            "statType": "numeric",
            "value": 0,
            "visibility": "hidden"
          },
          "W": {
            "group": "Stats",
            "statOrder": 6,
            "statType": "numeric",
            "value": null,
            "visibility": "normal"
          }
        }
      },
      "Vehicle": {
        "templateClass": "Unit"
      },
      "Wargear": {
        "aspects": {
          "Visibility": "always"
        },
        "rules": {
          "addKeywordToGrandparent": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "{parent}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "keyword?",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "{parent}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "keyword?",
                  "value"
                ]
              },
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "keyword?",
                    "value"
                  ]
                ],
                "value": "none"
              },
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "{parent}",
                    "classification"
                  ]
                ],
                "value": "Unit"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 12
          },
          "addKeywordToParent": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "keyword?",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "keyword?",
                  "value"
                ]
              },
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "keyword?",
                    "value"
                  ]
                ],
                "value": "none"
              },
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "classification"
                  ]
                ],
                "value": "Unit"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 12
          },
          "renameWargear": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": [
                  "{self}",
                  "aspects",
                  "Label"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "aspects",
                    "Label"
                  ]
                ],
                "value": ""
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 200
          }
        },
        "stats": {
          "keyword?": {
            "statType": "term",
            "value": "none",
            "visibility": "hidden"
          }
        }
      },
      "Weapon": {
        "aspects": {
          "Visibility": "active"
        },
        "rules": {
          "A weapon cannot have a single modification.": {
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Weapon Modification"
                  ]
                ]
              },
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Weapon Modification"
                  ]
                ],
                "value": 2
              }
            ],
            "evaluate": "OR",
            "failState": "error"
          },
          "allowEnhancement": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "allowed",
                    "classifications"
                  ]
                ],
                "value": "Weapon Modification"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{roster}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              },
              {
                "actionable": true,
                "not": false,
                "operator": "OR",
                "paths": [
                  [
                    "{parent}",
                    "classIdentity"
                  ],
                  [
                    "{parent}",
                    "{parent}",
                    "classIdentity"
                  ]
                ],
                "value": "Unit"
              },
              {
                "actionable": true,
                "min": 6,
                "not": false,
                "operator": "OR",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Experience",
                    "value"
                  ],
                  [
                    "{parent}",
                    "{parent}",
                    "stats",
                    "Experience",
                    "value"
                  ]
                ]
              },
              {
                "actionable": true,
                "contains": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "keywords",
                    "Keywords"
                  ],
                  [
                    "{parent}",
                    "{parent}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Epic Hero"
              },
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "classIdentity"
                  ]
                ],
                "value": "Weapon"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "allowEnhancements": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "allowed",
                    "classifications"
                  ]
                ],
                "value": "Weapon Enhancement"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Battle Honour",
                    "max"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "allowMelee": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": "Melee"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Range",
                    "value"
                  ]
                ],
                "value": "Melee"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "allowRanged": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": "Ranged"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Range",
                    "value"
                  ]
                ],
                "value": "Melee"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "renameWeapon": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "value": [
                  "{self}",
                  "aspects",
                  "Label"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "aspects",
                    "Label"
                  ]
                ],
                "value": ""
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 200
          },
          "resetStatsForMultiWeapons": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    [
                      "A",
                      "AP",
                      "D",
                      "BS",
                      "WS",
                      "Range",
                      "S"
                    ],
                    "value"
                  ]
                ],
                "value": null
              },
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    [
                      "A",
                      "AP",
                      "D",
                      "BS",
                      "WS",
                      "Range",
                      "S"
                    ],
                    "visibility"
                  ]
                ],
                "value": "hidden"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "operator": "SUM",
                "paths": [
                  [
                    "{self}",
                    "traits",
                    "classIdentity",
                    "Weapon",
                    "quantity"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "stats": {
          "A": {
            "statOrder": 1,
            "statType": "numeric",
            "value": null,
            "visibility": "normal"
          },
          "AP": {
            "statOrder": 4,
            "statType": "numeric",
            "tracked": true,
            "value": null,
            "visibility": "normal"
          },
          "BS": {
            "format": "{v}+",
            "statOrder": 2,
            "statType": "numeric",
            "tracked": true,
            "value": null,
            "visibility": "normal"
          },
          "D": {
            "dynamic": false,
            "statOrder": 5,
            "statType": "numeric",
            "tracked": true,
            "value": null,
            "visibility": "normal"
          },
          "Range": {
            "format": "{v}″",
            "statOrder": 0,
            "statType": "numeric",
            "value": null,
            "visibility": "normal"
          },
          "S": {
            "dynamic": false,
            "statOrder": 3,
            "statType": "numeric",
            "tracked": true,
            "value": null,
            "visibility": "normal"
          },
          "WS": {
            "format": "{v}+",
            "statOrder": 2,
            "statType": "numeric",
            "tracked": true,
            "value": null,
            "visibility": "normal"
          }
        }
      },
      "Weapon Modification": {
        "aspects": {
          "Lock Qty": true,
          "Rename": true,
          "Unique": true
        },
        "keywords": {
          "Tags": []
        },
        "stats": {
          "Battle Honour": {
            "statType": "numeric",
            "tracked": true,
            "value": 0.5,
            "visibility": "hidden"
          },
          "Crusade Pts": {
            "statType": "numeric",
            "tracked": true,
            "value": 0.5,
            "visibility": "hidden"
          }
        },
        "templateClass": "",
        "text": ""
      }
    },
    "assetCatalog": {
      "Ability§Anti-": {
        "keywords": {
          "Keywords": [
            "Weapon Ability"
          ]
        },
        "rules": {
          "putKeywordInName": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "prepend": " ",
                "value": [
                  "{self}",
                  "stats",
                  "keyword",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "keyword",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 99
          }
        },
        "stats": {
          "keyword": {
            "statType": "term",
            "value": null,
            "visibility": "hidden"
          },
          "x": {
            "text": "An unmodified Wound roll of {t} against a target with the matching keyword scores a Critical Wound."
          }
        }
      },
      "Ability§Assault": {
        "keywords": {
          "Keywords": [
            "Weapon Ability"
          ]
        },
        "text": "Can be shot even if the bearer’s unit Advanced."
      },
      "Ability§Blast": {
        "keywords": {
          "Keywords": [
            "Weapon Ability"
          ]
        },
        "text": "* Add 1 to the Attacks characteristic for every five models in the target unit (rounding down).\n* Can never be used against a target that is within Engagement Range of any units from the attacking model’s army (including its own)."
      },
      "Ability§Damaged:": {
        "keywords": {
          "Keywords": [
            "Model Ability"
          ],
          "Tags": [
            "Core"
          ]
        },
        "stats": {
          "x": {
            "text": "While this model has {t}, each time this model makes an attack, subtract 1 from the Hit roll."
          }
        }
      },
      "Ability§Deadly Demise": {
        "keywords": {
          "Tags": [
            "Core"
          ],
          "Keywords": [
            "Model Ability"
          ]
        },
        "stats": {
          "x": {
            "text": "When this model is destroyed, roll one D6. On a 6, each unit within 6\" suffers {t} mortal wounds."
          }
        }
      },
      "Ability§Deep Strike": {
        "keywords": {
          "Keywords": [
            "Model Ability"
          ],
          "Tags": [
            "Core"
          ]
        },
        "text": "* Unit can be set up in Reserves instead of on the battlefield.\n* Unit can be set up in your Reinforcements step, more than 9\" horizontally away from all enemy models."
      },
      "Ability§Devastating Wounds": {
        "keywords": {
          "Keywords": [
            "Weapon Ability"
          ]
        },
        "text": "A Critical Wound inflicts mortal wounds equal to the weapon’s Damage characteristic, instead of any normal damage."
      },
      "Ability§Extra Attacks": {
        "keywords": {
          "Keywords": [
            "Weapon Ability"
          ]
        },
        "rules": {
          "noModifyingA": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "A",
                    "value"
                  ]
                ],
                "value": [
                  "{parent}",
                  "stats",
                  "A",
                  "processed",
                  "numeric",
                  "default"
                ]
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "The bearer can attack with this weapon in addition to any other weapons it can make attacks with."
      },
      "Ability§Feel No Pain": {
        "keywords": {
          "Tags": [
            "Core"
          ],
          "Keywords": [
            "Model Ability"
          ]
        },
        "stats": {
          "x": {
            "text": "Each time this model would lose a wound, roll one D6: if the result equals or exceeds {t}, that wound is not lost."
          }
        }
      },
      "Ability§Fights First": {
        "keywords": {
          "Keywords": [
            "Model Ability"
          ],
          "Tags": [
            "Core"
          ]
        },
        "text": "Units with this ability that are eligible to fight do so in the Fights First step, provided every model in the unit has this ability."
      },
      "Ability§Firing Deck": {
        "keywords": {
          "Tags": [
            "Core"
          ],
          "Keywords": [
            "Model Ability"
          ]
        },
        "stats": {
          "x": {
            "text": "Each time this Transport shoots, select one weapon from up to {t} models embarked within it; this Transport counts as being equipped with those weapons as well."
          }
        }
      },
      "Ability§Hazardous": {
        "keywords": {
          "Keywords": [
            "Weapon Ability"
          ]
        },
        "text": "After a unit shoots or fights, roll one Hazardous test (one D6) for each Hazardous weapon used. For each 1, one model equipped with a Hazardous weapon is destroyed (Characters, Monsters and Vehicles suffer 3 mortal wounds instead)."
      },
      "Ability§Heavy": {
        "keywords": {
          "Keywords": [
            "Weapon Ability"
          ]
        },
        "text": "Add 1 to Hit rolls if the bearer’s unit Remained Stationary this turn."
      },
      "Ability§Hover": {
        "keywords": {
          "Keywords": [
            "Model Ability"
          ],
          "Tags": [
            "Core"
          ]
        },
        "text": "When you are instructed to Declare Battle Formations, before doing anything else, you must first declare which models from your army with this ability will be in Hover mode.\n\nIf a model is in Hover mode, then until the end of the battle, its Move characteristic is changed to 20\", it loses the Aircraft keyword and it loses all associated rules for being an Aircraft model. Models in Hover mode do not start the battle in Reserves, but you can choose to place them into Strategic Reserves following the normal rules if you wish."
      },
      "Ability§Ignores Cover": {
        "keywords": {
          "Keywords": [
            "Weapon Ability"
          ]
        },
        "text": "Each time an attack is made with this weapon, the target cannot have the Benefit of Cover against that attack."
      },
      "Ability§Indirect Fire": {
        "keywords": {
          "Keywords": [
            "Weapon Ability"
          ]
        },
        "text": "* Can target and make attacks against units that are not visible to the attacking unit.\n* If no models are visible in a target unit when\nit is selected, then when making an attack against that target with an Indirect Fire weapon, subtract 1 from that attack’s Hit roll and the target has the Benefit of Cover against that attack."
      },
      "Ability§Infiltrators": {
        "keywords": {
          "Keywords": [
            "Model Ability"
          ],
          "Tags": [
            "Core"
          ]
        },
        "text": "During deployment, if every model in a unit has this ability, then when you set it up, it can be set up anywhere on the battlefield that is more than 9\" horizontally away from the enemy deployment zone and all enemy models."
      },
      "Ability§Invulnerable": {
        "keywords": {
          "Keywords": [
            "Model Ability"
          ],
          "Tags": [
            "Core"
          ]
        },
        "rules": {
          "putKeywordInName": {
            "actions": [
              {
                "actionType": "modify",
                "append": ")",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "designation"
                  ]
                ],
                "prepend": " (",
                "value": [
                  "{self}",
                  "stats",
                  "keyword",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "operator": "SUM",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "keyword",
                    "value"
                  ]
                ],
                "value": 0
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 101
          }
        },
        "stats": {
          "keyword": {
            "statType": "term",
            "value": null,
            "visibility": "hidden"
          }
        },
        "text": "* Never modified by an attack’s AP.\n* The controlling player can choose to use either a model’s invulnerable save or its Save characteristic."
      },
      "Ability§Lance": {
        "keywords": {
          "Keywords": [
            "Weapon Ability"
          ]
        },
        "text": "Each time an attack is made with this weapon, if the bearer made a Charge move this turn, add 1 to that attack’s Wound roll."
      },
      "Ability§Leader": {
        "keywords": {
          "Keywords": [
            "Model Ability"
          ],
          "Tags": [
            "Core"
          ]
        },
        "text": "* Before the battle, Character units with the Leader ability can be attached to one of their Bodyguard units to form an Attached unit.\n* Attached units can only contain one Leader.\n* Attacks cannot be allocated to Character\nmodels in Attached units."
      },
      "Ability§Lethal Hits": {
        "keywords": {
          "Keywords": [
            "Weapon Ability"
          ]
        },
        "text": "Each time an attack is made with this weapon, a Critical Hit automatically wounds the target."
      },
      "Ability§Lone Operative": {
        "keywords": {
          "Tags": [
            "Core"
          ],
          "Keywords": [
            "Model Ability"
          ]
        },
        "text": "Unless part of an Attached unit, this unit can only be selected as the target of a ranged attack if \nthe attacking model is within 12\"."
      },
      "Ability§Melta": {
        "keywords": {
          "Keywords": [
            "Weapon Ability"
          ]
        },
        "stats": {
          "x": {
            "text": "Increase the Damage by {t} when targeting units within half range."
          }
        }
      },
      "Ability§One Shot": {
        "keywords": {
          "Keywords": [
            "Weapon Ability"
          ]
        }
      },
      "Ability§Pistol": {
        "keywords": {
          "Keywords": [
            "Weapon Ability"
          ]
        },
        "text": "* Can be shot even if the bearer’s unit is within Engagement Range of enemy units, but must target one of those enemy units.\n* Cannot be shot alongside any other non-Pistol weapon (except by a Monster or Vehicle)."
      },
      "Ability§Precision": {
        "keywords": {
          "Keywords": [
            "Weapon Ability"
          ]
        },
        "text": "When targeting an Attached unit, the attacking model’s player can have the attack allocated to a Character model in that unit visible to the bearer."
      },
      "Ability§Psychic": {
        "keywords": {
          "Keywords": [
            "Weapon Ability"
          ]
        },
        "text": "If a Psychic weapon or ability causes any unit to suffer one or more wounds, each of those wounds is considered to have been inflicted by a Psychic Attack."
      },
      "Ability§Rapid Fire": {
        "keywords": {
          "Keywords": [
            "Weapon Ability"
          ]
        },
        "stats": {
          "x": {
            "text": "Increase the Attacks by {t} when targeting units within half range."
          }
        }
      },
      "Ability§Scouts": {
        "keywords": {
          "Keywords": [
            "Model Ability"
          ],
          "Tags": [
            "Core"
          ]
        },
        "stats": {
          "x": {
            "text": "* Unit can make a Normal move of up to {t} before the first turn begins."
          }
        },
        "text": "* If embarked in a Dedicated Transport, that Dedicated Transport can make this move instead.\n* Must end this move more than 9\" horizontally away from all enemy models."
      },
      "Ability§Stealth": {
        "keywords": {
          "Tags": [
            "Core"
          ],
          "Keywords": [
            "Model Ability"
          ]
        },
        "text": "If every model in a unit has this ability, then each time \na ranged attack is made against it, subtract 1 from that \nattack’s Hit roll."
      },
      "Ability§Sustained Hits": {
        "keywords": {
          "Keywords": [
            "Weapon Ability"
          ]
        },
        "stats": {
          "x": {
            "text": "Each Critical Hit scores {t} additional hits on the target."
          }
        }
      },
      "Ability§Torrent": {
        "keywords": {
          "Keywords": [
            "Weapon Ability"
          ]
        },
        "text": "Each time an attack is made with this weapon, that attack automatically hits the target."
      },
      "Ability§Transport": {
        "keywords": {
          "Keywords": [
            "Model Ability"
          ],
          "Tags": [
            "Core"
          ]
        },
        "text": "* A unit can embark within a friendly Transport if all of its models end a Normal, Advance or Fall Back move within 3\" of that Transport.\n* A unit cannot embark and disembark in the same phase.\n* Units that start your Movement phase embarked within a Transport can disembark this phase, provided their Transport has not Advanced or Fallen Back.\n* If a unit disembarks before its Transport moves, it can act normally.\n* If a unit disembarks after its Transport moves, it cannot move or charge this turn, but can otherwise act normally.\n* Disembarking units must be set up wholly within 3\" of their Transport and not within Engagement Range of any enemy models (or the unit cannot disembark).\n* Units that disembark this turn cannot Remain Stationary.\n* If a Transport is destroyed, any embarked units must disembark.\n* Roll one D6 for each model that disembarks: for each 1, that model’s unit suffers 1 mortal wound.\n* Until the start of its controlling player’s next Command phase, the disembarking unit\nis Battle-shocked.\n* Until the end of the turn, the disembarking unit counts as having made a Normal move, and cannot declare a charge.\n* Units disembarking a destroyed Transport that cannot be set up wholly within 3\" of it must perform an Emergency Disembarkation:\n  * Must be set up wholly within 6\" of it instead of wholly within 3\".\n  * Suffer 1 mortal wound for each roll of 1-3, instead of each roll of 1.\n  * Any disembarking model that cannot be set up is destroyed."
      },
      "Ability§Twin-linked": {
        "keywords": {
          "Keywords": [
            "Weapon Ability"
          ]
        },
        "text": "Each time an attack is made with this weapon, you can re-roll that attack’s Wound roll."
      },
      "Battle Scar§Battle-Weary": {
        "aspects": {
          "Lock Qty": true,
          "Unique": true
        },
        "text": "Each time this unit takes a Battle-shock, Leadership, Desperate Escape or Out of Action test, subtract 1 from that test."
      },
      "Battle Scar§Crippling Damage": {
        "aspects": {
          "Lock Qty": true,
          "Unique": true
        },
        "rules": {
          "decrease": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "M",
                    "value"
                  ],
                  [
                    "{parent}",
                    "assets",
                    "classification",
                    "Model",
                    "stats",
                    "M",
                    "value"
                  ]
                ],
                "value": -1
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "This unit cannot Advance and you subtract 1” from the Move characteristic of models in this unit."
      },
      "Battle Scar§Deep Scars": {
        "aspects": {
          "Lock Qty": true,
          "Unique": true
        },
        "text": "Each time a Critical Hit is scared against this unit, that attack automatically wounds this unit."
      },
      "Battle Scar§Devastating Blow": {
        "rules": {
          "tallyBattleHonour": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Battle Trait"
                  ]
                ],
                "value": 1
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "stats": {
          "Battle Honour": {
            "dynamic": true,
            "increment": {
              "value": 1
            },
            "label": "Lost Honours",
            "statType": "numeric",
            "value": 0,
            "visibility": "normal"
          }
        },
        "text": "Remove a Battle Honour"
      },
      "Battle Scar§Disgraced": {
        "aspects": {
          "Lock Qty": true,
          "Unique": true
        },
        "text": "You cannot use any Stratagems to affect this unit and this unit cannot be Marked for Greatness."
      },
      "Battle Scar§Fatigued": {
        "aspects": {
          "Lock Qty": true
        },
        "rules": {
          "decreaseOC": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "OC",
                    "value"
                  ],
                  [
                    "{parent}",
                    "assets",
                    "classification",
                    "Model",
                    "stats",
                    "OC",
                    "value"
                  ]
                ],
                "value": -1
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "Subtract 1 from the Objective Control characteristic of models in this unit and this unit never receives a charge bonus."
      },
      "Battle Scar§Mark of Shame": {
        "aspects": {
          "Lock Qty": true,
          "Unique": true
        },
        "rules": {
          "cannotAttach": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "{parent}",
                    "disallowed",
                    "items"
                  ]
                ],
                "value": [
                  "{parent}",
                  "item"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "{parent}",
                    "classIdentity"
                  ]
                ],
                "value": "Unit"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "noAttachments": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "disallowed",
                    "classifications"
                  ]
                ],
                "value": "Character"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "This unit cannot form an Attached unit, it is unaffected by the Aura abilities of friendly units, and it can't be Marked for Greatness."
      },
      "Battle Trait§Archaeotech Powercell": {
        "keywords": {
          "Tags": [
            "notWalker",
            "Vehicle"
          ]
        },
        "rules": {
          "add": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "M",
                    "value"
                  ],
                  [
                    "{parent}",
                    "assets",
                    "classification",
                    "Model",
                    "stats",
                    "M",
                    "value"
                  ]
                ],
                "value": 2
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "Add 2″ to the move characteristic of models in this unit."
      },
      "Battle Trait§Auto-Repair Nodes": {
        "keywords": {
          "Tags": [
            "notWalker",
            "Vehicle"
          ]
        },
        "text": "At the start of your Command phase, one model in this unit regains 1 lost wound."
      },
      "Battle Trait§Battle-scarred Resistance": {
        "assets": {
          "traits": [
            {
              "item": "Ability§Feel No Pain",
              "stats": {
                "x": {
                  "value": "6"
                }
              }
            }
          ]
        },
        "keywords": {
          "Tags": [
            "Infantry"
          ]
        },
        "rules": {
          "apply": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "traits"
                  ]
                ],
                "value": {
                  "item": "Ability§Feel No Pain",
                  "stats": {
                    "x": {
                      "value": "6"
                    }
                  }
                }
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "Models in this unit have the Feel No Pain 6+ ability."
      },
      "Battle Trait§Bio-Acid Burns": {
        "assets": {
          "traits": [
            {
              "item": "Ability§Feel No Pain",
              "stats": {
                "x": {
                  "value": "5"
                }
              }
            }
          ]
        },
        "keywords": {
          "Tags": [
            "Character"
          ]
        },
        "rules": {
          "apply": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "traits"
                  ]
                ],
                "value": {
                  "item": "Ability§Feel No Pain",
                  "stats": {
                    "x": {
                      "value": "5"
                    }
                  }
                }
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "Character models in this unit have the Feel No Pain 5+ ability."
      },
      "Battle Trait§Blessed Hull": {
        "assets": {
          "traits": [
            {
              "item": "Ability§Invulnerable",
              "stats": {
                "x": {
                  "value": "5"
                }
              }
            }
          ]
        },
        "keywords": {
          "Tags": [
            "notWalker",
            "Vehicle"
          ]
        },
        "rules": {
          "apply": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "traits"
                  ]
                ],
                "value": {
                  "item": "Ability§Invulnerable",
                  "stats": {
                    "x": {
                      "value": "5"
                    }
                  }
                }
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "Models in this unit have a 5+ invulnerable save."
      },
      "Battle Trait§Born Hunter": {
        "assets": {
          "traits": [
            {
              "item": "Ability§Scouts",
              "stats": {
                "x": {
                  "value": "9"
                }
              }
            }
          ]
        },
        "keywords": {
          "Tags": [
            "Character"
          ]
        },
        "rules": {
          "apply": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "traits"
                  ]
                ],
                "value": {
                  "item": "Ability§Scouts",
                  "stats": {
                    "x": {
                      "value": "9"
                    }
                  }
                }
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "This unit has the Scouts 9” ability."
      },
      "Battle Trait§Deadly Combatant": {
        "assets": {
          "traits": [
            {
              "item": "Ability§Sustained Hits",
              "stats": {
                "x": {
                  "value": "1"
                }
              }
            }
          ]
        },
        "keywords": {
          "Tags": [
            "Character"
          ]
        },
        "rules": {
          "apply": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "traits",
                    "classification",
                    "Melee Weapon",
                    "traits"
                  ],
                  [
                    "{parent}",
                    "traits",
                    "classIdentity",
                    "Weapon",
                    "traits",
                    "classification",
                    "Melee Weapon",
                    "traits"
                  ]
                ],
                "value": {
                  "item": "Ability§Sustained Hits",
                  "stats": {
                    "x": {
                      "value": "1"
                    }
                  }
                }
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "Melee weapons equipped by Character models in this unit have the [Sustained Hits 1] ability."
      },
      "Battle Trait§Death Incarnate (Aura)": {
        "keywords": {
          "Tags": [
            "Character"
          ]
        },
        "text": "While an enemy unit is within 6” of this unit, reduce the Leadership of models in that unit by 1."
      },
      "Battle Trait§Destructive Impulse": {
        "keywords": {
          "Tags": [
            "Striding Behemoth"
          ]
        },
        "text": "Each time a model in this unit destroys an enemy unit, add twice as many marks to its Tyrannic War Veteran tally as normal."
      },
      "Battle Trait§Elite Crew": {
        "keywords": {
          "Tags": [
            "notWalker",
            "Vehicle"
          ]
        },
        "text": "Each time a model in this unit makes an attack, re-roll a Hit roll of 1."
      },
      "Battle Trait§Encircling Raptors": {
        "keywords": {
          "Tags": [
            "Mounted"
          ]
        },
        "text": "If this unit is in Strategic Reserves, it counts the battle round number as one higher than the current battle round number, for the purpose of determining when and where it is set up."
      },
      "Battle Trait§Focused Gunners": {
        "keywords": {
          "Tags": [
            "notWalker",
            "Vehicle"
          ]
        },
        "text": "Models in this unit do not suffer the penalty to Hit rolls for making ranged attacks while their unit is within Engagement Range of one or more enemy units."
      },
      "Battle Trait§Headhunters": {
        "keywords": {
          "Tags": [
            "Infantry"
          ]
        },
        "text": "At the start of the battle, select one enemy unit (regardless of how many units in your army have this battle trait). Until the end of the battle, each time a model in this unit makes an attack against that enemy unit, re-roll a Hit roll of 1 and re-roll a Wound roll of 1."
      },
      "Battle Trait§High-Speed Gunnery": {
        "keywords": {
          "Tags": [
            "Mounted"
          ]
        },
        "text": "Each time this unit advances, until the end of this turn all ranged weapons equipped by models in this unit gain the [Assault] ability."
      },
      "Battle Trait§Hunter's Celerity": {
        "keywords": {
          "Tags": [
            "Mounted"
          ]
        },
        "rules": {
          "add": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "M",
                    "value"
                  ],
                  [
                    "{parent}",
                    "assets",
                    "classification",
                    "Model",
                    "stats",
                    "M",
                    "value"
                  ]
                ],
                "value": 2
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "Add 2” to the Move characteristic of models in this unit."
      },
      "Battle Trait§Mounted Guerillas": {
        "keywords": {
          "Tags": [
            "Mounted"
          ]
        },
        "text": "This unit is eligible to declare a Charge on a turn it Fell Back."
      },
      "Battle Trait§Natural Leader": {
        "keywords": {
          "Tags": [
            "Character"
          ]
        },
        "text": "Each time you take a battle-shock or leadership test for this unit you can re-roll that test."
      },
      "Battle Trait§Obdurate Obedience": {
        "keywords": {
          "Tags": [
            "Infantry"
          ]
        },
        "rules": {
          "add": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "OC",
                    "value"
                  ],
                  [
                    "{parent}",
                    "assets",
                    "classification",
                    "Model",
                    "stats",
                    "OC",
                    "value"
                  ]
                ],
                "value": 1
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "Add 1 to the Objective Control characteristic of all models in this unit."
      },
      "Battle Trait§Only the Swift Survive": {
        "keywords": {
          "Tags": [
            "Infantry"
          ]
        },
        "text": "Add 1 to Advance and Charge rolls made for this unit."
      },
      "Battle Trait§Predatory Urge": {
        "keywords": {
          "Tags": [
            "Mounted"
          ]
        },
        "text": "You can re-roll Charge rolls made for this unit."
      },
      "Battle Trait§Rapid Adaptation": {
        "keywords": {
          "Tags": [
            "Striding Behemoth"
          ]
        },
        "rules": {
          "allowMonsterHunter": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": "Monster Hunters"
              },
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Battle Honour"
                  ]
                ],
                "value": -1
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Tyrannic War Battle Honour§Giantslayers"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Tyrannic War Battle Honour§Painful Lessons"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Tyrannic War Battle Honour§Indomitable Defiance"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Tyrannic War Battle Honour§Hamstringing Attacks"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Tyrannic War Battle Honour§Nimble Defence"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Tyrannic War Battle Honour§Titans’ Bane"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "stats": {
          "Crusade Pts": {
            "value": 0
          }
        },
        "text": "Select any one of the Battle Honours from the Monster Hunters upgrade path for this unit to gain, regardless of the ones it has already unlocked.  The Battle Honour you select does not increase this unit's Crusade points total and does not count as an additional Battle Honour when determining the maximum number of Battle Honors this unit can have."
      },
      "Battle Trait§Reinforced Superstructure": {
        "keywords": {
          "Tags": [
            "notWalker",
            "Vehicle"
          ]
        },
        "text": "Each time an attack with Strength 7 or less is allocated to a model in this unit, worsen the Armour Penetration characteristic of that attack by 1."
      },
      "Battle Trait§Resolute Veterans": {
        "keywords": {
          "Tags": [
            "Infantry"
          ]
        },
        "text": "Each time you take a Battle-shock, Leadership or Desperate Escape test for this unit, add 1 to that test."
      },
      "Battle Trait§Shadow Stalker": {
        "assets": {
          "traits": [
            "Ability§Stealth"
          ]
        },
        "keywords": {
          "Tags": [
            "Character"
          ]
        },
        "rules": {
          "apply": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "traits"
                  ]
                ],
                "value": "Ability§Stealth"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "This unit has the Stealth ability."
      },
      "Battle Trait§Tireless Raiders": {
        "keywords": {
          "Tags": [
            "Mounted"
          ]
        },
        "text": "Models in this unit can make attacks with ranged weapons even when their unit is in Engagement Range of enemy units, but they can only make such attacks against units they are in Engagement Range of. In such circumstances, those models can target enemy units even if other friendly units are within Engagement Range of the same enemy unit."
      },
      "Battle Trait§Vanguard Espionage": {
        "assets": {
          "traits": [
            {
              "item": "Ability§Scouts",
              "stats": {
                "x": {
                  "value": "9"
                }
              }
            }
          ]
        },
        "keywords": {
          "Tags": [
            "Infantry"
          ]
        },
        "rules": {
          "apply": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "traits"
                  ]
                ],
                "value": {
                  "item": "Ability§Scouts",
                  "stats": {
                    "x": {
                      "value": "9"
                    }
                  }
                }
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "This unit has the Scouts 9” ability."
      },
      "Campaign Phase§Phase 1": {},
      "Campaign Phase§Phase 2": {},
      "Campaign Phase§Phase 3": {},
      "Campaign§Campaign": {},
      "Crusade Relic§Archeotech Nano-Med": {
        "keywords": {
          "Tags": [
            "Antiquity Relic"
          ]
        },
        "rules": {
          "Infantry Model only.": {
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Infantry"
              },
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Infantry"
              }
            ],
            "evaluate": "OR",
            "failState": "error"
          }
        },
        "stats": {
          "Crusade Pts": {
            "value": 2
          }
        },
        "text": "Infantry Model Only. The first time the bearer is destroyed, you can choose to roll one D6 at the end of the phase instead of using any rules that are triggered when a model is destroyed. If you roll a 4+, the bearer is set back up on the battlefield as close as possible to where it was before it was destroyed, with D3 wounds remaining. If it was If the bear was part of an attached unit when it was destroyed and its bodyguard unit is still on the battlefield when the Bearer is set back up, it must be placed in Unit Coherency with that unit again to form an Attached Unit. You do not need to take an Out of Action pass for the Bearer at the end of the battle, unless it is destroyed again."
      },
      "Crusade Relic§Artificer Weapon": {
        "assets": {
          "traits": [
            {
              "item": "Ability§Devastating Wounds",
              "stats": {
                "x": {
                  "value": "1"
                }
              }
            }
          ]
        },
        "keywords": {
          "Tags": [
            "Artificer Relic"
          ]
        },
        "stats": {
          "Weapon": {
            "dynamic": true,
            "statType": "term",
            "value": "weapon",
            "visibility": "normal"
          }
        },
        "text": "Select a weapon the bearer is equipped with (Excluding any Enhancements or weapons affected by weapon modifications) Make a note on the bearer’s Crusade card of this weapon and give it a suitable name.  That weapon is now a Crusade Relic and each time the bearer makes an attack with it, on a Critical Hit, the target suffers 1 Mortal Wound in addition to any normal damage."
      },
      "Crusade Relic§Biosplint Gland": {
        "keywords": {
          "Tags": [
            "Artificer Relic"
          ]
        },
        "text": "Each time the bearer’s unit ends a Charge move, select one enemy unit within engagement range of the bearer.  Until the end of the turn, each time a model in that enemy unit makes an attack, subtract 1 from that attack's Hit Roll."
      },
      "Crusade Relic§Cranium Obscura": {
        "keywords": {
          "Tags": [
            "Antiquity Relic"
          ]
        },
        "rules": {
          "Cannot be taken by Psykers.": {
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Psyker"
              },
              {
                "actionable": true,
                "contains": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Psyker"
              }
            ],
            "evaluate": "AND",
            "failState": "error"
          }
        },
        "stats": {
          "Crusade Pts": {
            "value": 2
          }
        },
        "text": "Cannot be taken by Psyker models.  Each time a Psychic Attack targets the bearer’s unit, subtract 1 from the attack's Hit Roll."
      },
      "Crusade Relic§Crimson Medallion of Bastior": {
        "keywords": {
          "Tags": [
            "Artificer Relic"
          ]
        },
        "text": "At the start of your Command phase, if the bearer is within range of an objective marker that you control, roll one D6, on a 4+ you gain 1CP."
      },
      "Crusade Relic§Gheist Prism Field": {
        "keywords": {
          "Tags": [
            "Legendary Relic"
          ]
        },
        "stats": {
          "Crusade Pts": {
            "value": 3
          }
        },
        "text": "Each time the bearer makes a Normal, Advance or Fall Back move, until the move is finished, it can move horizontally through models and terrain features (it cannot finish a move on top of another model or its base). If doing so when making a Fall Back move, models in this unit do not need to take a Desperate Escape test.  After it has finished moving, select one enemy unit it moved across (if any) and roll one D6, on a 2+ that unit suffers D3 mortal wounds."
      },
      "Crusade Relic§Lantern of Detestation": {
        "keywords": {
          "Tags": [
            "Antiquity Relic"
          ]
        },
        "stats": {
          "Crusade Pts": {
            "value": 2
          }
        },
        "text": "At the start of your opponent’s Movement phase, for each enemy unit within Engagement range of the bearer (excluding Imperium and chaos units), roll one D6, on a 4+ until the end of the phase that unit cannot be selected to fall back."
      },
      "Crusade Relic§Master Crafted Armour": {
        "keywords": {
          "Tags": [
            "Artificer Relic"
          ]
        },
        "rules": {
          "Add": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Sv",
                    "value"
                  ]
                ],
                "value": -1
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "Add 1 to armour saving throws made for the bearer."
      },
      "Crusade Relic§Null-Field Disruptor": {
        "keywords": {
          "Tags": [
            "Legendary Relic"
          ]
        },
        "stats": {
          "Crusade Pts": {
            "value": 3
          }
        },
        "text": "Each time the bearer makes a melee attack, invulnerable saving throws cannot be made against that attack."
      },
      "Crusade Relic§Shadesplinter Cloak": {
        "keywords": {
          "Tags": [
            "Antiquity Relic"
          ]
        },
        "stats": {
          "Crusade Pts": {
            "value": 2
          }
        },
        "text": "Unless the bearer is part of an Attached unit at the start of the battle, it has the Lone Operative ability."
      },
      "Crusade Relic§Shard of Dying Light": {
        "keywords": {
          "Tags": [
            "Antiquity Relic"
          ]
        },
        "rules": {
          "Psyker Model only.": {
            "evals": [
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Psyker"
              },
              {
                "actionable": true,
                "contains": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "keywords",
                    "Keywords"
                  ]
                ],
                "value": "Psyker"
              }
            ],
            "evaluate": "OR",
            "failState": "error"
          }
        },
        "stats": {
          "Crusade Pts": {
            "value": 2
          }
        },
        "text": "Psyker Model only. Each time the bearer makes a Psychic Attack, add 1 to that attack’s wound roll."
      },
      "Crusade Relic§Sigil of Sol": {
        "keywords": {
          "Tags": [
            "Antiquity Relic"
          ]
        },
        "stats": {
          "Crusade Pts": {
            "value": 2
          }
        },
        "text": "Once per battle round, if the bearer is on the battlefield when you use a Strategic Ploy Stratagems, you can use that Stratagem without spending any CP."
      },
      "Crusade Relic§Vertebrax of Vodun": {
        "keywords": {
          "Tags": [
            "Legendary Relic"
          ]
        },
        "stats": {
          "Crusade Pts": {
            "value": 3
          }
        },
        "text": "At the start of your Command phase, select one friendly model on the battlefield (excluding the bearer) and then select one Aura ability that selected model has.  Until the start of your next Command phase, the bearer has that Aura ability."
      },
      "Crusade Relic§Vortex Grenade": {
        "assets": {
          "traits": [
            "Weapon§Vortex Grenade"
          ]
        },
        "keywords": {
          "Tags": [
            "Legendary Relic"
          ]
        },
        "stats": {
          "Crusade Pts": {
            "value": 3
          }
        },
        "text": "The bearer is equipped with a vortex grenade that has the following profile:\n|Range|A|BS|S|AP|D|\n|---|---|---|---|---|---|\n|6”|1|2+|-|-|-|\n\nAbilities: The bearer can only shoot with this weapon once per battle.  When an attack is made with this weapon, if a hit is scored, roll one D6 for each unit within 6” of the target unit(excluding the target unit itself) on a 4+, the unit being rolled for suffers D3 mortal wounds.  The target unit then suffers 3D3 mortal wounds."
      },
      "Mission Record§Mission Record": {},
      "Mission Reward§Battle Trait": {
        "keywords": {
          "Tags": [
            "unitReward"
          ]
        }
      },
      "Mission Reward§Blooded (one use)": {
        "keywords": {
          "Tags": [
            "forceReward"
          ]
        }
      },
      "Mission Reward§Crusade Relic": {
        "keywords": {
          "Tags": [
            "unitReward"
          ]
        }
      },
      "Mission Reward§Requisition Point": {
        "keywords": {
          "Tags": [
            "forceReward"
          ]
        },
        "stats": {
          "RP": {
            "statType": "numeric",
            "tracked": true,
            "value": -1,
            "visibility": "hidden"
          }
        }
      },
      "Mission Reward§Supply Limit": {
        "keywords": {
          "Tags": [
            "forceReward"
          ]
        },
        "stats": {
          "Supply Limit": {
            "statType": "numeric",
            "tracked": true,
            "value": 200,
            "visibility": "hidden"
          }
        }
      },
      "Order of Battle§Order of Battle": {},
      "Requisition§Fresh Recruits": {
        "stats": {
          "RP": {
            "dynamic": true,
            "max": 4,
            "min": 1,
            "value": 0
          }
        },
        "text": "Costs 1 RP for every 2 Battle Honors the unit has. Increases the maximum size of the unit."
      },
      "Requisition§Increase Supply Limit": {
        "rules": {
          "Supply limit rules": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Supply Limit",
                    "value"
                  ]
                ],
                "value": 200
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "stats": {
          "RP": {
            "value": 1
          },
          "Supply Limit": {
            "statType": "numeric",
            "tracked": true,
            "value": 200,
            "visibility": "hidden"
          }
        },
        "text": "Increase supply by 200"
      },
      "Requisition§Legendary Veterans": {
        "aspects": {
          "Unique": true
        },
        "stats": {
          "RP": {
            "value": 3
          }
        },
        "text": "A non-Character unit can keep advancing past the cap of 30 XP."
      },
      "Requisition§Rearm and Resupply": {
        "stats": {
          "Battle Honour": {
            "dynamic": true,
            "label": "Lost Honours",
            "min": 0,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "normal"
          },
          "RP": {
            "value": 1
          }
        },
        "text": "Is used before a battle to change the wargear on models in a unit in your Order of Battle"
      },
      "Requisition§Renowned Heroes": {
        "aspects": {
          "Unique": true
        },
        "rules": {
          "allowEnhancements": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "allowed",
                    "classifications"
                  ]
                ],
                "value": "Enhancement"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": "anyEnhancement"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "stats": {
          "RP": {
            "dynamic": true,
            "increment": {
              "value": 1
            },
            "max": 3,
            "min": 1,
            "value": 0
          }
        },
        "text": "Adds an Enhancement to a Character. Costs 1 for the first, 2 for the second and 3 for every enhancement added after that. Usable when a character joins the roster or when they gain a rank. Characters cannot have more than 1 enhancement."
      },
      "Requisition§Repair and Recuperate": {
        "stats": {
          "Crusade Pts": {
            "statType": "numeric",
            "tracked": true,
            "value": 1,
            "visibility": "normal"
          },
          "RP": {
            "dynamic": true,
            "max": 5,
            "min": 1,
            "value": 0,
            "visibility": "always"
          }
        },
        "text": "Costs an additional RP for each battle honor the unit has, and removes a battle scar."
      },
      "Requisition§Tyrannic War Veteran": {
        "rules": {
          "apply": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "traits"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "Upgrade Path",
                  "processed",
                  "term",
                  "current"
                ]
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 999
          },
          "Select a Tyrannic Battle Honour and reset the Vet Tally.": {
            "evals": [
              {
                "actionable": true,
                "max": 9,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Vet Tally",
                    "value"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "warning"
          },
          "Select an upgrade path.": {
            "evals": [
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Upgrade Path",
                    "value"
                  ]
                ],
                "value": "-"
              }
            ],
            "evaluate": "AND",
            "failState": "error"
          },
          "unhideTally": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "Vet Tally",
                    "visibility"
                  ]
                ],
                "value": "normal"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "stats": {
          "RP": {
            "value": 1
          },
          "Upgrade Path": {
            "dynamic": true,
            "ranks": {
              "-": {
                "order": 0
              },
              "Monster Hunters": {
                "order": 1,
                "term": "Tyrannic War Battle Honour§Giantslayers"
              },
              "Striding Behemoths": {
                "order": 2,
                "term": "Tyrannic War Battle Honour§Thunderous Blows"
              }
            },
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          }
        }
      },
      "Roster§Roster": {
        "allowed": {
          "classifications": [
            "Character",
            "Infantry/Mounted",
            "Vehicle",
            "Unit"
          ]
        },
        "aspects": {
          "Collapse": true,
          "Describe": true,
          "Label": "Army",
          "Lock Qty": true,
          "Rename": true,
          "Type": "conceptual",
          "Unique": true
        },
        "assets": {
          "traits": [
            "Stratagems§Stratagems"
          ]
        },
        "constraints": {
          "any": [],
          "none": [
            "Legends"
          ]
        },
        "keywords": {
          "Tags": [
            "Any",
            "noTally"
          ]
        },
        "rules": {
          "addOrderOfBattle&Campaign": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "traits"
                  ]
                ],
                "value": "Order of Battle§Order of Battle"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "traits"
                  ]
                ],
                "value": "Campaign§Campaign"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              }
            ],
            "evaluate": "OR",
            "failState": "pass",
            "order": 1
          },
          "addRP": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Requisition Pts",
                    "value"
                  ]
                ],
                "value": [
                  "{self}",
                  "assets",
                  "classification",
                  "Campaign",
                  "stats",
                  "Battle Tally",
                  "value"
                ]
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          },
          "allowFaction": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "Faction",
                  "value"
                ]
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "assets",
                    "classIdentity",
                    "Unit",
                    "constraints",
                    "any"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "Faction",
                  "value"
                ]
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          },
          "allowLegends": {
            "actions": [
              {
                "actionType": "remove",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "none"
                  ]
                ],
                "value": "Legends"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Legends",
                    "value"
                  ]
                ],
                "value": "-"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "ally1Selected": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Ally 1 Points",
                    "visibility"
                  ]
                ],
                "value": "normal"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "Allied faction 1",
                  "value"
                ]
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "assets",
                    "classIdentity",
                    "Unit",
                    "constraints",
                    "any"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "Allied faction 1",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Allied faction 1",
                    "value"
                  ]
                ],
                "value": "-"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 50
          },
          "ally2Selected": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Ally 2 Points",
                    "visibility"
                  ]
                ],
                "value": "normal"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "Allied faction 2",
                  "value"
                ]
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "assets",
                    "classIdentity",
                    "Unit",
                    "constraints",
                    "any"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "Allied faction 2",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Allied faction 2",
                    "value"
                  ]
                ],
                "value": "-"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 50
          },
          "assumeNoDataIfNoFaction": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "text"
                  ]
                ],
                "value": "You're trying to make a roster from the base 40k rulebook. You (currently) need a faction rulebook in order to create an army list. If you haven't imported a faction rulebook yet, you can do so from the “Library” tab: <span class=\"mdi mdi-bookshelf\">. Click “Import” <span class=\"font-layer ng-star-inserted\"><i class=\"mdi mdi-folder-outline ng-star-inserted\"></i><i class=\"mdi mdi-arrow-right-thick ng-star-inserted\" style=\"left: -20%; top: 5%; transform: scale(0.5);\"></i></span> and select the desired rulebook."
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Faction",
                    "value"
                  ]
                ],
                "value": "-"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "hide2ndAllied": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Allied faction 2",
                    "visibility"
                  ]
                ],
                "value": "hidden"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Allied faction 1",
                    "value"
                  ]
                ],
                "value": "-"
              },
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Allied faction 2",
                    "value"
                  ]
                ],
                "value": "-"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "preventDuplicateAllies": {
            "actions": [
              {
                "actionType": "remove",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Allied faction 2",
                    "ranks"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "Allied faction 1",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Allied faction 1",
                    "value"
                  ]
                ],
                "value": "-"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 50
          },
          "preventDuplicateFactions": {
            "actions": [
              {
                "actionType": "remove",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Allied faction 1",
                    "ranks"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "Faction",
                  "value"
                ]
              },
              {
                "actionType": "remove",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Allied faction 2",
                    "ranks"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "Faction",
                  "value"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Faction",
                    "value"
                  ]
                ],
                "value": "-"
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 50
          },
          "removeTextWhenUnits": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "text"
                  ]
                ],
                "value": null
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "operator": "SUM",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "included"
                  ]
                ],
                "value": 0
              }
            ],
            "evaluate": "AND",
            "failState": "pass",
            "order": 0
          },
          "Select your Detachment.": {
            "evals": [
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Detachment",
                    "value"
                  ]
                ],
                "value": "-"
              }
            ],
            "evaluate": "AND",
            "failState": "warning"
          },
          "Select your Warlord.": {
            "evals": [
              {
                "actionable": true,
                "min": 1,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tracked",
                    "Warlord"
                  ]
                ]
              },
              {
                "actionable": true,
                "min": 1,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tally",
                    "Character"
                  ]
                ]
              }
            ],
            "evaluate": "OR",
            "failState": "error"
          },
          "setCustomMax": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Points",
                    "max"
                  ]
                ],
                "value": [
                  "{self}",
                  "stats",
                  "Max Points",
                  "value"
                ]
              },
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Max Points",
                    "visibility"
                  ]
                ],
                "value": "normal"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Battle Size",
                    "value"
                  ]
                ],
                "value": "custom"
              }
            ],
            "evaluate": "OR",
            "failState": "pass",
            "order": 1
          },
          "setMaxes": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Points",
                    "max"
                  ]
                ],
                "value": [
                  "{self}",
                  "tracked",
                  "maxPoints"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": true,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Battle Size",
                    "value"
                  ]
                ],
                "value": "custom"
              }
            ],
            "evaluate": "OR",
            "failState": "pass",
            "order": 1
          },
          "subtractRP": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Requisition Pts",
                    "value"
                  ]
                ],
                "value": [
                  "{this}",
                  "evals",
                  "0",
                  "result",
                  "integer"
                ]
              }
            ],
            "evals": [
              {
                "actionable": true,
                "equation": {
                  "operator": "T*O",
                  "value": -1
                },
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "tracked",
                    "RP"
                  ]
                ]
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          },
          "useCrusade": {
            "actions": [
              {
                "actionType": "set",
                "iterations": 1,
                "paths": [
                  [
                    "{self}",
                    "stats",
                    [
                      "Faction Group",
                      "Crusade Pts",
                      "Requisition Pts",
                      "Battle Tally"
                    ],
                    "visibility"
                  ]
                ],
                "value": "normal"
              }
            ],
            "evals": [
              {
                "actionable": true,
                "not": false,
                "operator": "AND",
                "paths": [
                  [
                    "{self}",
                    "stats",
                    "Play",
                    "value"
                  ]
                ],
                "value": "Narrative"
              }
            ],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "stats": {
          "Allied faction 1": {
            "label": "Allied Faction",
            "ranks": {
              "-": {
                "order": 0
              }
            },
            "statOrder": 5,
            "statType": "rank",
            "value": "-",
            "visibility": "hidden"
          },
          "Allied faction 2": {
            "label": "Allied Faction",
            "ranks": {
              "-": {
                "order": 0
              }
            },
            "statOrder": 6,
            "statType": "rank",
            "value": "-",
            "visibility": "hidden"
          },
          "Ally 1 Points": {
            "group": "Cost",
            "groupOrder": 0,
            "statOrder": 2,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "Ally 2 Points": {
            "group": "Cost",
            "groupOrder": 0,
            "statOrder": 3,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "Battle Size": {
            "dynamic": true,
            "increment": {},
            "ranks": {
              "custom": {
                "order": 0
              },
              "Incursion": {
                "order": 1,
                "tracking": {
                  "maxPoints": 1000
                }
              },
              "Strike Force": {
                "order": 2,
                "tracking": {
                  "maxPoints": 2000
                }
              },
              "Onslaught": {
                "order": 3,
                "tracking": {
                  "maxPoints": 3000
                }
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "Strike Force",
            "visibility": "normal"
          },
          "Character": {
            "min": 1,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "Crusade Pts": {
            "group": "Cost",
            "groupOrder": 0,
            "statOrder": 10,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "Detachment": {
            "dynamic": true,
            "ranks": {
              "-": {
                "order": 0
              }
            },
            "statOrder": 4,
            "statType": "rank",
            "value": "-",
            "visibility": "always"
          },
          "Enhancement": {
            "max": 3,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "hidden"
          },
          "Faction": {
            "dynamic": true,
            "ranks": {
              "-": {
                "order": 0
              }
            },
            "statOrder": 3,
            "statType": "rank",
            "value": "-",
            "visibility": "always"
          },
          "Faction Group": {
            "dynamic": true,
            "ranks": {
              "-": {
                "order": 0
              },
              "Imperium": {
                "order": 1,
                "term": "Imperium Faction"
              },
              "Chaos": {
                "order": 2,
                "term": "Chaos Faction"
              },
              "Xenos": {
                "order": 3,
                "term": "Xenos Faction"
              }
            },
            "statOrder": 5,
            "statType": "rank",
            "value": "-",
            "visibility": "active"
          },
          "Legends": {
            "dynamic": true,
            "group": "Misc.",
            "groupOrder": 2,
            "ranks": {
              "-": {
                "order": 0
              },
              "✓": {
                "order": 1
              }
            },
            "statOrder": 1,
            "statType": "rank",
            "value": "-",
            "visibility": "normal"
          },
          "Max Points": {
            "dynamic": true,
            "increment": {
              "value": 500
            },
            "min": 0,
            "statOrder": 1,
            "statType": "numeric",
            "value": 500,
            "visibility": "hidden"
          },
          "Mission": {
            "dynamic": true,
            "group": "Misc.",
            "groupOrder": 2,
            "ranks": {
              "-": {
                "order": 0
              },
              "Leviathan": {
                "order": 1
              }
            },
            "statType": "rank",
            "value": "Leviathan",
            "visibility": "normal"
          },
          "Play": {
            "dynamic": true,
            "group": "Misc.",
            "groupOrder": 2,
            "ranks": {
              "Matched": {
                "order": 0
              },
              "Narrative": {
                "order": 1
              }
            },
            "statOrder": 2,
            "statType": "rank",
            "value": "Matched",
            "visibility": "normal"
          },
          "Points": {
            "group": "Cost",
            "groupOrder": 0,
            "statOrder": 1,
            "statType": "numeric",
            "tracked": true,
            "value": 0,
            "visibility": "normal"
          },
          "Requisition Pts": {
            "group": "Cost",
            "groupOrder": 0,
            "max": 10,
            "min": 0,
            "statOrder": 4,
            "statType": "numeric",
            "tracked": true,
            "value": 5,
            "visibility": "hidden"
          }
        },
        "text": "### Creating Your 40k Roster\n\n*This message will disappear after you add your first unit.*\n\n1. Adjust overall roster settings at the top 👆\n2. Add units from the inventory on the right 👉 (*If using a narrow screen, swipe OR click the lower-right button to access the inventory*)\n3. Edit units by modifying their statline or individual models.\n   * Model count is often controlled by a single \"Models\" stat.\n   * Simple upgrades can be done using dropdown menus in the unit.\n   * For more complex loadouts requiring single-model adjustments, do one of the following:\n      * Add a new model from the inventory\n      * Split apart a stack of models using the provided button:&nbsp;<i class=\"mdi mdi-vector-arrange-below ng-star-inserted\"></i>\n\n      This will create separate models for loadout-editing while maintaining the overall model quantity."
      },
      "Stratagem§Command Re-roll": {
        "keywords": {
          "Keywords": [
            "Core"
          ],
          "Category": [
            "Battle Tactic"
          ],
          "Phase": [
            "Any"
          ],
          "Turn": [
            "Opponent’s",
            "Yours"
          ]
        },
        "stats": {
          "Command Cost": {
            "value": 1
          }
        },
        "text": "**WHEN:** In any phase, just after you have made a Hit\nroll, a Wound roll, a Damage roll, a saving throw, an\nAdvance roll, a Charge roll, a Desperate Escape test,\na Hazardous test, or just after you have rolled the\ndice to determine the number of attacks made with a\nweapon, for an attack, model or unit from your army.\n\n**EFFECT:** You re-roll that roll, test or saving throw."
      },
      "Stratagem§Counter-offensive": {
        "keywords": {
          "Category": [
            "Strategic Ploy"
          ],
          "Turn": [
            "Opponent’s",
            "Yours"
          ],
          "Phase": [
            "Fight"
          ],
          "Keywords": [
            "Core"
          ]
        },
        "stats": {
          "Command Cost": {
            "value": 2
          }
        },
        "text": "**WHEN:** Fight phase, just after an enemy unit\nhas fought.\n\n**TARGET:** One unit from your army that is within\nEngagement Range of one or more enemy units\nand that has not already been selected to fight\nthis phase.\n\n**EFFECT:** Your unit fights next."
      },
      "Stratagem§Epic Challenge": {
        "keywords": {
          "Keywords": [
            "Core"
          ],
          "Phase": [
            "Fight"
          ],
          "Category": [
            "Epic Deed"
          ],
          "Turn": [
            "Opponent’s",
            "Yours"
          ]
        },
        "stats": {
          "Command Cost": {
            "value": 1
          }
        },
        "text": "**WHEN:** Fight phase, when a Character unit from your army that is within Engagement Range of one or more Attached units is selected to fight.\n\n**TARGET:** One Character model in your unit.\n\n**EFFECT:** Until the end of the phase, all melee attacks made by that model have the [PRECISION] ability."
      },
      "Stratagem§Fire Overwatch": {
        "keywords": {
          "Phase": [
            "Charge",
            "Movement"
          ],
          "Category": [
            "Strategic Ploy"
          ],
          "Turn": [
            "Opponent’s"
          ],
          "Keywords": [
            "Core"
          ]
        },
        "stats": {
          "Command Cost": {
            "value": 1
          }
        },
        "text": "**WHEN:** Your opponent’s Movement or Charge phase,\njust after an enemy unit is set up or when an enemy\nunit starts or ends a Normal, Advance, Fall Back or\nCharge move.\n\n**TARGET:** One unit from your army that is within 24\" of\nthat enemy unit and that would be eligible to shoot if\nit were your Shooting phase.\n\n**EFFECT:** Your unit can shoot that enemy unit as if it\nwere your Shooting phase.\n\n**RESTRICTIONS:** Until the end of the phase, each\ntime a model in your unit makes a ranged attack,\nan unmodified Hit roll of 6 is required to score a hit,\nirrespective of the attacking weapon’s Ballistic Skill\nor any modifiers. You can only use this Stratagem\nonce per turn."
      },
      "Stratagem§Go to Ground": {
        "keywords": {
          "Keywords": [
            "Core"
          ],
          "Phase": [
            "Shooting"
          ],
          "Turn": [
            "Opponent’s"
          ],
          "Category": [
            "Battle Tactic"
          ]
        },
        "stats": {
          "Command Cost": {
            "value": 1
          }
        },
        "text": "**WHEN:** Your opponent’s Shooting phase, just after an\nenemy unit has selected its targets.\n\n**TARGET:** One Infantry unit from your army that was\nselected as the target of one or more of the attacking\nunit’s attacks.\n\n**EFFECT:** Until the end of the phase, all models in\nyour unit have a 6+ invulnerable save and have the\nBenefit of Cover (pg 44)."
      },
      "Stratagem§Grenade": {
        "keywords": {
          "Keywords": [
            "Core"
          ],
          "Category": [
            "Wargear"
          ],
          "Phase": [
            "Shooting"
          ],
          "Turn": [
            "Yours"
          ]
        },
        "stats": {
          "Command Cost": {
            "value": 1
          }
        },
        "text": "**WHEN:** Your Shooting phase.\n\n**TARGET:** One Grenades unit from your army that is\nnot within Engagement Range of any enemy units\nand has not been selected to shoot this phase.\n\n**EFFECT:** Select one enemy unit that is not within\nEngagement Range of any units from your army and\nis within 8\" of and visible to your Grenades unit.\nRoll six D6: for each 4+, that enemy unit suffers 1\nmortal wound."
      },
      "Stratagem§Heroic Intervention": {
        "keywords": {
          "Keywords": [
            "Core"
          ],
          "Phase": [
            "Charge"
          ],
          "Category": [
            "Strategic Ploy"
          ],
          "Turn": [
            "Opponent’s"
          ]
        },
        "stats": {
          "Command Cost": {
            "value": 2
          }
        },
        "text": "**WHEN:** Your opponent’s Charge phase, just after an\nenemy unit ends a Charge move.\n\n**TARGET:** One unit from your army that is within 6\"\nof that enemy unit and would be eligible to declare\na charge against that enemy unit if it were your\nCharge phase.\n\n**EFFECT:** Your unit now declares a charge that targets\nonly that enemy unit, and you resolve that charge as\nif it were your Charge phase.\n\n**RESTRICTIONS:** You can only select a Vehicle unit\nfrom your army if it is a Walker. Note that even if\nthis charge is successful, your unit does not receive\nany Charge bonus this turn (pg 29)."
      },
      "Stratagem§Insane Bravery": {
        "keywords": {
          "Turn": [
            "Yours"
          ],
          "Keywords": [
            "Core"
          ],
          "Phase": [
            "Command"
          ],
          "Category": [
            "Epic Deed"
          ]
        },
        "stats": {
          "Command Cost": {
            "value": 1
          }
        },
        "text": "**WHEN:** Battle-shock step of your Command phase,\njust after you have failed a Battle-shock test taken\nfor a unit from your army (pg 11).\n\n**TARGET:** The unit from your army that Battle-shock\ntest was just taken for (even though your\nBattle-shocked units cannot normally be affected by\nyour Stratagems).\n\n**EFFECT:** Your unit is treated as having passed that\ntest instead, and is not Battle-shocked as a result."
      },
      "Stratagem§Rapid Ingress": {
        "keywords": {
          "Keywords": [
            "Core"
          ],
          "Phase": [
            "Movement"
          ],
          "Category": [
            "Strategic Ploy"
          ],
          "Turn": [
            "Opponent’s"
          ]
        },
        "stats": {
          "Command Cost": {
            "value": 1
          }
        },
        "text": "**WHEN:** End of your opponent’s Movement phase.\n\n**TARGET:** One unit from your army that is in Reserves.\n\n**EFFECT:** Your unit can arrive on the battlefield\nas if it were the Reinforcements step of your\nMovement phase.\n\n**RESTRICTIONS:** You cannot use this Stratagem to\nenable a unit to arrive on the battlefield during a\nbattle round it would not normally be able to do so in."
      },
      "Stratagem§Smokescreen": {
        "keywords": {
          "Keywords": [
            "Core"
          ],
          "Phase": [
            "Shooting"
          ],
          "Category": [
            "Wargear"
          ],
          "Turn": [
            "Opponent’s"
          ]
        },
        "stats": {
          "Command Cost": {
            "value": 1
          }
        },
        "text": "**WHEN:** Your opponent’s Shooting phase, just after an enemy unit has selected its targets.\n\n**TARGET:** One Smoke unit from your army that was selected as the target of one or more of the attacking unit’s attacks.\n\n**EFFECT:** Until the end of the phase, all models in your unit have the Benefit of Cover (pg 44) and the Stealth ability (pg 20)."
      },
      "Stratagem§Tank Shock": {
        "keywords": {
          "Keywords": [
            "Core"
          ],
          "Phase": [
            "Charge"
          ],
          "Category": [
            "Strategic Ploy"
          ],
          "Turn": [
            "Yours"
          ]
        },
        "stats": {
          "Command Cost": {
            "value": 1
          }
        },
        "text": "**WHEN**: Your Charge phase.\n\n**TARGET:** One Vehicle unit from your army.\n\n**EFFECT:** Until the end of the phase, after your unit ends a Charge move, select one enemy unit within Engagement Range of it, then select one melee weapon your unit is equipped with. Roll a number of D6 equal to that weapon’s Strength characteristic. If that Strength characteristic is greater than that enemy unit’s Toughness characteristic, roll two additional D6. For each 5+, that enemy unit suffers 1 mortal wound (to a maximum of 6 mortal wounds)."
      },
      "Stratagems§Stratagems": {},
      "Tyrannic War Battle Honour§Gargantuan Rage": {
        "keywords": {
          "Keywords": [
            "Striding Behemoths Vet"
          ]
        },
        "rules": {
          "apply": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "assets",
                    "classification",
                    "Melee Weapon",
                    "traits"
                  ],
                  [
                    "{parent}",
                    "assets",
                    "classIdentity",
                    "Weapon",
                    "assets",
                    "classification",
                    "Melee Weapon",
                    "traits"
                  ],
                  [
                    "{parent}",
                    "assets",
                    "classification",
                    "Model",
                    "assets",
                    "classification",
                    "Melee Weapon",
                    "traits"
                  ],
                  [
                    "{parent}",
                    "assets",
                    "classification",
                    "Model",
                    "assets",
                    "classIdentity",
                    "Weapon",
                    "assets",
                    "classification",
                    "Melee Weapon",
                    "traits"
                  ]
                ],
                "value": {
                  "item": "Ability§Sustained Hits",
                  "stats": {
                    "x": {
                      "value": "1"
                    }
                  }
                }
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 80
          }
        },
        "text": "Melee weapons models in this unit are equipped with have the [Sustained Hits 1] ability."
      },
      "Tyrannic War Battle Honour§Giantslayers": {
        "keywords": {
          "Keywords": [
            "Monster Hunters"
          ]
        },
        "rules": {
          "allow": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Tyrannic War Battle Honour§Painful Lessons"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Tyrannic War Battle Honour§Indomitable Defiance"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": "Monster Hunters"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "Each time a model in this unit makes an attack against a **Monster** or **Vehicle** unit, re-roll a Hit role of 1."
      },
      "Tyrannic War Battle Honour§Hamstringing Attacks": {
        "keywords": {
          "Keywords": [
            "Monster Hunters"
          ]
        },
        "text": "In your Shooting phase, each time this unit is selected to shoot, after resolving its attacks, select one **Monster** or **Vehicle** unit that lost one or more wounds as a result of those attacks. Until the start of your next Shooting phase, subtract 2″ from the Move characteristic of models in that **Monster** or **Vehicle** unit and subtract 2 from Charge rolls made for that unit."
      },
      "Tyrannic War Battle Honour§Indomitable Defiance": {
        "keywords": {
          "Keywords": [
            "Monster Hunters"
          ]
        },
        "rules": {
          "allow": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Tyrannic War Battle Honour§Titans’ Bane"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Tyrannic War Battle Honour§Nimble Defence"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "While this unit is within Engagement range of any enemy **Monster** or **Vehicle** models, it automatically passes Battle-shock and Leadership tests."
      },
      "Tyrannic War Battle Honour§Indomitable Stature": {
        "keywords": {
          "Keywords": [
            "Striding Behemoths Vet"
          ]
        },
        "rules": {
          "allow": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Tyrannic War Battle Honour§Predatory Senses"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Tyrannic War Battle Honour§Sweeping Blow"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "Each time a ranged attack is made against this unit, if the Strength characteristic of that attack is greater than this unit’s toughness characteristic, subtract 1 from that attack’s Wound roll."
      },
      "Tyrannic War Battle Honour§Massive Stomp": {
        "keywords": {
          "Keywords": [
            "Striding Behemoths Vet"
          ]
        },
        "text": "Each time this unit is selected to fight in the Fight phase, before making any attacks, it can stomp. If it does so, select one enemy unit (excluding **Monster** and **Vehicle** units) within Engagement range of it and roll one D6: on a 2–5, that enemy suffers D3 mortal wounds; on a six, that enemy unit suffers 3 mortal wounds."
      },
      "Tyrannic War Battle Honour§Monstrous Presence (aura)": {
        "keywords": {
          "Keywords": [
            "Striding Behemoths Vet"
          ]
        },
        "rules": {
          "allow": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Tyrannic War Battle Honour§Unstoppable Advance"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Tyrannic War Battle Honour§Massive Stomp"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "While an enemy unit is within the engagement range of this unit:\n\n* Subtract 1 from the Leadership characteristic of models in that enemy unit.\n* Each time that unit takes a Battle–shock test, the Insane Bravery Stratagem cannot be used."
      },
      "Tyrannic War Battle Honour§Nimble Defence": {
        "keywords": {
          "Keywords": [
            "Monster Hunters"
          ]
        },
        "text": "Each time a **Monster** or **Vehicle** unit makes an attack against this unit, models in this unit have the Feel No Pain 5+ ability (Core Rules) against that attack."
      },
      "Tyrannic War Battle Honour§Painful Lessons": {
        "keywords": {
          "Keywords": [
            "Monster Hunters"
          ]
        },
        "rules": {
          "allow": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Tyrannic War Battle Honour§Hamstringing Attacks"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Tyrannic War Battle Honour§Titans’ Bane"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "Each time a **Monster** or **Vehicle** model makes an attack against this unit, worsen the Armor Penetration characteristic of that attacked by 1."
      },
      "Tyrannic War Battle Honour§Predatory Senses": {
        "keywords": {
          "Keywords": [
            "Striding Behemoths Vet"
          ]
        },
        "text": "Each time a model in this unit makes a ranged attack, re-roll a Hit role of 1."
      },
      "Tyrannic War Battle Honour§Prey Taker": {
        "keywords": {
          "Keywords": [
            "Striding Behemoths Vet"
          ]
        },
        "rules": {
          "allow": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Tyrannic War Battle Honour§Shocking Celerity"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Tyrannic War Battle Honour§Gargantuan Rage"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "Add 1 to Advance and Charge rolls made for this unit."
      },
      "Tyrannic War Battle Honour§Shocking Celerity": {
        "keywords": {
          "Keywords": [
            "Striding Behemoths Vet"
          ]
        },
        "rules": {
          "applyTrait": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "traits"
                  ]
                ],
                "value": "Ability§Fights First"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "This unit as the Fights First ability (Core Rules)."
      },
      "Tyrannic War Battle Honour§Sweeping Blow": {
        "keywords": {
          "Keywords": [
            "Striding Behemoths Vet"
          ]
        },
        "text": "Each time a model in this unit makes a melee attack, if a Critical Wound is rolled, the target suffers 1 mortal wound in addition to any normal damage."
      },
      "Tyrannic War Battle Honour§Thunderous Blows": {
        "keywords": {
          "Keywords": [
            "Striding Behemoths Vet"
          ]
        },
        "rules": {
          "allow": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Tyrannic War Battle Honour§Monstrous Presence (aura)"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Tyrannic War Battle Honour§Indomitable Stature"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "allowed",
                    "items"
                  ]
                ],
                "value": "Tyrannic War Battle Honour§Prey Taker"
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "constraints",
                    "any"
                  ]
                ],
                "value": "Striding Behemoths Vet"
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "Each time a model in this unit destroys an enemy unit, subtract 2 from that enemy unit’s Out of Action test (pg. 78) for this battle"
      },
      "Tyrannic War Battle Honour§Titans’ Bane": {
        "keywords": {
          "Keywords": [
            "Monster Hunters"
          ]
        },
        "rules": {
          "apply": {
            "actions": [
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "assets",
                    "classIdentity",
                    "Weapon",
                    "traits"
                  ],
                  [
                    "{parent}",
                    "assets",
                    "classification",
                    "Model",
                    "assets",
                    "classIdentity",
                    "Weapon",
                    "traits"
                  ]
                ],
                "value": {
                  "item": "Ability§Anti-",
                  "stats": {
                    "keyword": {
                      "value": "monster"
                    },
                    "x": {
                      "value": "4+"
                    }
                  }
                }
              },
              {
                "actionType": "add",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "assets",
                    "classIdentity",
                    "Weapon",
                    "traits"
                  ],
                  [
                    "{parent}",
                    "assets",
                    "classification",
                    "Model",
                    "assets",
                    "classIdentity",
                    "Weapon",
                    "traits"
                  ]
                ],
                "value": {
                  "item": "Ability§Anti-",
                  "stats": {
                    "keyword": {
                      "value": "vehicle"
                    },
                    "x": {
                      "value": "4+"
                    }
                  }
                }
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 80
          }
        },
        "text": "Weapons equipped by models in this unit have the Anti-monster 4+] and [Anti-vehicle 4+] abilities."
      },
      "Tyrannic War Battle Honour§Unstoppable Advance": {
        "keywords": {
          "Keywords": [
            "Striding Behemoths Vet"
          ]
        },
        "text": "Each time this unit makes a Normal, Advance or Fall Back move, until that move is finished, models in this unit can move horizontally through models and terrain features (they cannot finish a move on top of another model or its base). If doing so when making a Fall Back move, models in this unit do not need to take a Desperate Escape test."
      },
      "Weapon Modification§Armour Piercing": {
        "keywords": {
          "Tags": []
        },
        "rules": {
          "applyAP": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "AP",
                    "value"
                  ]
                ],
                "value": -1
              },
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "assets",
                    "classIdentity",
                    "Weapon",
                    "stats",
                    "AP",
                    "value"
                  ]
                ],
                "value": -1
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "Improve the weapon’s Armor Penetration characteristic by 1"
      },
      "Weapon Modification§Brutal": {
        "keywords": {
          "Tags": []
        },
        "rules": {
          "Add 1 to strength": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "S",
                    "value"
                  ]
                ],
                "value": 1
              },
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "assets",
                    "classIdentity",
                    "Weapon",
                    "stats",
                    "S",
                    "value"
                  ]
                ],
                "value": 1
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "Add 1 to the weapon’s Strength characteristic."
      },
      "Weapon Modification§Finely Balanced": {
        "keywords": {
          "Tags": []
        },
        "rules": {
          "Improve by 1": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    [
                      "WS",
                      "BS"
                    ],
                    "value"
                  ]
                ],
                "value": -1
              },
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "assets",
                    "classIdentity",
                    "Weapon",
                    "stats",
                    [
                      "BS",
                      "WS"
                    ],
                    "value"
                  ]
                ],
                "value": -1
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "Improves the WS/BS Characteristic by 1"
      },
      "Weapon Modification§Heirloom": {
        "keywords": {
          "Tags": []
        },
        "rules": {
          "applyAttack": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "A",
                    "value"
                  ]
                ],
                "value": 1
              },
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "assets",
                    "classIdentity",
                    "Weapon",
                    "stats",
                    "A",
                    "value"
                  ]
                ],
                "value": 1
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass",
            "order": 999
          }
        },
        "text": "When resolving an attack with this weapon, add 1 to the Attacks characteristic."
      },
      "Weapon Modification§Master-worked": {
        "keywords": {
          "Tags": []
        },
        "rules": {
          "applyDamage": {
            "actions": [
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "stats",
                    "D",
                    "value"
                  ]
                ],
                "value": 1
              },
              {
                "actionType": "modify",
                "iterations": 1,
                "paths": [
                  [
                    "{parent}",
                    "assets",
                    "classIdentity",
                    "Weapon",
                    "stats",
                    "D",
                    "value"
                  ]
                ],
                "value": 1
              }
            ],
            "evals": [],
            "evaluate": "AND",
            "failState": "pass"
          }
        },
        "text": "Improves the weapons damage characteristic by 1."
      },
      "Weapon Modification§Precise": {
        "assets": {
          "traits": [
            "Ability§Precision"
          ]
        },
        "text": "Gives the weapon the Precision keyword."
      },
      "Weapon§Vortex Grenade": {
        "stats": {
          "A": {
            "value": 1
          },
          "BS": {
            "value": 2
          }
        },
        "text": "Abilities: The bearer can only shoot with this weapon once per battle.  When an attack is made with this weapon, if a hit is scored, roll one D6 for each unit within 6” of the target unit(excluding the target unit itself) on a 4+, the unit being rolled for suffers D3 mortal wounds.  The target unit then suffers 3D3 mortal wounds."
      }
    },
    "gameModes": {},
    "theme": {}
  }
}